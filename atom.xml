<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MuYi`s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://imuyi.github.io/"/>
  <updated>2016-06-20T06:43:44.478Z</updated>
  <id>http://imuyi.github.io/</id>
  
  <author>
    <name>MuYi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Job</title>
    <link href="http://imuyi.github.io/2016/05/18/Job/"/>
    <id>http://imuyi.github.io/2016/05/18/Job/</id>
    <published>2016-05-18T12:12:37.389Z</published>
    <updated>2016-06-20T06:43:44.478Z</updated>
    
    <content type="html">&lt;p&gt;这是爬取自北邮人论坛的招聘信息，点击即可跳转到北邮人论坛。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/492127&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【中科院信息工程研究所】招聘客座实习学生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/494262&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【百度】商业基础平台部策略实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/494675&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【Comper】炫酷外企诚招大数据相关实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/494971&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【平方和投资】招聘交易系统开发工程师&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/495533&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【增长引擎】招聘有全栈潜力的Geek加入创业项目&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/495587&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【FreeWheel】2016暑期实习-北京（Dev Ops可以内推，其&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/495727&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【百度】机器学习/自然语言处理/数据挖掘和产品经理&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/495729&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【美团】云计算部招聘web开发(python)实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/496031&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【尚德机构】招募机器学习算法实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/496534&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【唯科时代】测试实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/497938&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【滴滴】滴滴出行2017实习生校招开始！&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/497952&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【FreeWheel】Dev_Operation_Engineer &amp;amp; System_Operat&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498014&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【下厨房】招 python/web/android/iOS/DBA/运维/测试/&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498176&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【乐视】OpenStack开发工程师实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498177&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【乐视】SDN高级开发工程师(实习)&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498219&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【京东】广告算法实习生招聘-仅限研二学生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498251&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【依依短租】全国领先短租民宿诚聘（后台实习生）&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498269&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【铁科院】深度学习实习生-图像方向&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498308&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【EMC】北京研发中心招聘研发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498334&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【中国科学院信息工程研究所】 招聘 大数据研发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498345&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【联通时科】招聘java web后台开发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498346&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【格灵深瞳】Web前端/全栈实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498385&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【金山软件-金山云】招聘运维研发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498437&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【亚马逊AWS】助理架构师实习生-偏开发&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498443&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【滴滴出行】大数据&amp;amp;机器学习研究院实习招聘–FE、Java&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498445&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【知乎】Web后端开发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498447&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【知乎】系统开发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498464&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【猿题库】  研发日薪500元，产品日薪300元 – 数据分&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498466&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【App Annie】招募Web Backend Software Engineer&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498478&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【房多多】房多多实习生招聘&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498481&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【美团】搜索查询分析组招聘实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498498&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【百度】招募测试开发实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498502&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【百度】百度国际化团队招聘测试实习生&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498518&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【人人网】投资研究实习生（研究开发方向）&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498528&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;red&quot;&gt;【实习】【百度】招聘大数据研发工程师&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://bbs.byr.cn/article/ParttimeJob/498543&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;【实习】【搜狗】搜狗桌面研究部招机器学习实习生&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是爬取自北邮人论坛的招聘信息，点击即可跳转到北邮人论坛。&lt;/p&gt;
    
    </summary>
    
      <category term="Job" scheme="http://imuyi.github.io/categories/Job/"/>
    
    
      <category term="Job" scheme="http://imuyi.github.io/tags/Job/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题</title>
    <link href="http://imuyi.github.io/2016/05/09/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://imuyi.github.io/2016/05/09/前端面试题/</id>
    <published>2016-05-09T12:56:16.000Z</published>
    <updated>2016-05-09T13:05:07.244Z</updated>
    
    <content type="html">&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href=&quot;http://doctoc.herokuapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;前端面试基础题&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#fe-interview&quot;&gt;FE-interview&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#$html，-http，web综合问题&quot;&gt;$HTML， HTTP，web综合问题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#常见排序算法的时间复杂度空间复杂度&quot;&gt;常见排序算法的时间复杂度,空间复杂度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#前端需要注意哪些seo&quot;&gt;前端需要注意哪些SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#web开发中会话跟踪的方法有哪些&quot;&gt;web开发中会话跟踪的方法有哪些&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#img的title和alt有什么区别&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;的&lt;code&gt;title&lt;/code&gt;和&lt;code&gt;alt&lt;/code&gt;有什么区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#doctype是什么举例常见doctype及特点&quot;&gt;doctype是什么,举例常见doctype及特点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#html全局属性global-attribute有哪些&quot;&gt;HTML全局属性(global attribute)有哪些&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#什么是web语义化有什么好处&quot;&gt;什么是web语义化,有什么好处&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#http-method&quot;&gt;HTTP method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#从浏览器地址栏输入url到显示页面的步骤以http为例&quot;&gt;从浏览器地址栏输入url到显示页面的步骤(以HTTP为例)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#http-request报文结构是怎样的&quot;&gt;HTTP request报文结构是怎样的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#http-response报文结构是怎样的&quot;&gt;HTTP response报文结构是怎样的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何进行网站性能优化&quot;&gt;如何进行网站性能优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#什么是渐进增强&quot;&gt;什么是渐进增强&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#http状态码及其含义&quot;&gt;HTTP状态码及其含义&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#$css部分&quot;&gt;$CSS部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#css选择器有哪些&quot;&gt;CSS选择器有哪些&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#css-sprite是什么有什么优缺点&quot;&gt;css sprite是什么,有什么优缺点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#display-none与visibility-hidden的区别&quot;&gt;&lt;code&gt;display: none;&lt;/code&gt;与&lt;code&gt;visibility: hidden;&lt;/code&gt;的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#css-hack原理及常用hack&quot;&gt;css hack原理及常用hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#specified-valuecomputed-valueused-value计算方法&quot;&gt;specified value,computed value,used value计算方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#link与@import的区别&quot;&gt;&lt;code&gt;link&lt;/code&gt;与&lt;code&gt;@import&lt;/code&gt;的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#display-block和display-inline的区别&quot;&gt;&lt;code&gt;display: block;&lt;/code&gt;和&lt;code&gt;display: inline;&lt;/code&gt;的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pnggifjpg的区别及如何选&quot;&gt;PNG,GIF,JPG的区别及如何选&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#css有哪些继承属性&quot;&gt;CSS有哪些继承属性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ie6浏览器有哪些常见的bug缺陷或者与标准不一致的地方如何解决&quot;&gt;IE6浏览器有哪些常见的bug,缺陷或者与标准不一致的地方,如何解决&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#容器包含若干浮动元素时如何清理包含浮动&quot;&gt;容器包含若干浮动元素时如何清理(包含)浮动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#什么是fouc如何避免&quot;&gt;什么是FOUC?如何避免&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何创建块级格式化上下文block-formatting-contextbfc有什么用&quot;&gt;如何创建块级格式化上下文(block formatting context),BFC有什么用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#displayfloatposition的关系&quot;&gt;display,float,position的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#外边距折叠collapsing-margins&quot;&gt;外边距折叠(collapsing margins)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何确定一个元素的包含块containing-block&quot;&gt;如何确定一个元素的包含块(containing block)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#stacking-context布局规则&quot;&gt;stacking context,布局规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何水平居中一个元素&quot;&gt;如何水平居中一个元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何竖直居中一个元素&quot;&gt;如何竖直居中一个元素&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#$javascript概念部分&quot;&gt;$javascript概念部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#dom元素e的egetattributepropname和epropname有什么区别和联系&quot;&gt;DOM元素e的e.getAttribute(propName)和e.propName有什么区别和联系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#offsetwidthoffsetheightclientwidthclientheight与scrollwidthscrollheight的区别&quot;&gt;offsetWidth/offsetHeight,clientWidth/clientHeight与scrollWidth/scrollHeight的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#xmlhttprequest通用属性和方法&quot;&gt;XMLHttpRequest通用属性和方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#focusblur与focusinfocusout的区别与联系&quot;&gt;focus/blur与focusin/focusout的区别与联系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#mouseovermouseout与mouseentermouseleave的区别与联系&quot;&gt;mouseover/mouseout与mouseenter/mouseleave的区别与联系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sessionstoragelocalstoragecookie区别&quot;&gt;sessionStorage,localStorage,cookie区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#javascript跨域通信&quot;&gt;javascript跨域通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#javascript有哪几种数据类型&quot;&gt;javascript有哪几种数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#什么闭包闭包有什么用&quot;&gt;什么闭包,闭包有什么用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#javascript有哪几种方法定义函数&quot;&gt;javascript有哪几种方法定义函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#应用程序存储和离线web应用&quot;&gt;应用程序存储和离线web应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#客户端存储localstorage和sessionstorage&quot;&gt;客户端存储localStorage和sessionStorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cookie及其操作&quot;&gt;cookie及其操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#javascript有哪些方法定义对象&quot;&gt;javascript有哪些方法定义对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#===运算符判断相等的流程是怎样的&quot;&gt;===运算符判断相等的流程是怎样的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#==运算符判断相等的流程是怎样的&quot;&gt;==运算符判断相等的流程是怎样的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#对象到字符串的转换步骤&quot;&gt;对象到字符串的转换步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#对象到数字的转换步骤&quot;&gt;对象到数字的转换步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#==的比较规则&quot;&gt;&amp;lt;,&amp;gt;,&amp;lt;=,&amp;gt;=的比较规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#运算符工作流程&quot;&gt;+运算符工作流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#函数内部arguments变量有哪些特性有哪些属性如何将它转换为数组&quot;&gt;函数内部arguments变量有哪些特性,有哪些属性,如何将它转换为数组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#dom事件模型是如何的编写一个eventutil工具类实现事件管理兼容&quot;&gt;DOM事件模型是如何的,编写一个EventUtil工具类实现事件管理兼容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#评价一下三种方法实现继承的优缺点并改进&quot;&gt;评价一下三种方法实现继承的优缺点,并改进&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#$javascript编程部分&quot;&gt;$javascript编程部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#请用原生js实现一个函数给页面制定的任意一个元素添加一个透明遮罩透明度可变默认02使这个区域点击无效要求兼容ie8及各主流浏览器遮罩层效果如下图所示&quot;&gt;请用原生js实现一个函数,给页面制定的任意一个元素添加一个透明遮罩(透明度可变,默认0.2),使这个区域点击无效,要求兼容IE8+及各主流浏览器,遮罩层效果如下图所示:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#请用代码写出今天是星期x其中x表示当天是星期几如果当天是星期一输出应该是今天是星期一&quot;&gt;请用代码写出(今天是星期x)其中x表示当天是星期几,如果当天是星期一,输出应该是”今天是星期一”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#下面这段代码想要循环延时输出结果0-1-2-3-4请问输出结果是否正确如果不正确请说明为什么并修改循环内的代码使其输出正确结果&quot;&gt;下面这段代码想要循环延时输出结果0 1 2 3 4,请问输出结果是否正确,如果不正确,请说明为什么,并修改循环内的代码使其输出正确结果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#现有一个page类其原型对象上有许多以post开头的方法如postmsg另有一拦截函数chekc只返回ture或false请设计一个函数该函数应批量改造原page的postxxx方法在保留其原有功能的同时为每个postxxx方法增加拦截验证功能当chekc返回true时继续执行原postxxx方法返回false时不再执行原postxxx方法&quot;&gt;现有一个Page类,其原型对象上有许多以post开头的方法(如postMsg);另有一拦截函数chekc,只返回ture或false.请设计一个函数,该函数应批量改造原Page的postXXX方法,在保留其原有功能的同时,为每个postXXX方法增加拦截验证功能,当chekc返回true时继续执行原postXXX方法,返回false时不再执行原postXXX方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#完成下面的tool-tip&quot;&gt;完成下面的tool-tip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#编写javascript深度克隆函数deepclone&quot;&gt;编写javascript深度克隆函数deepClone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#补充代码鼠标单击button1后将button1移动到button2的后面&quot;&gt;补充代码,鼠标单击Button1后将Button1移动到Button2的后面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#网页中实现一个计算当年还剩多少时间的倒数计时程序要求网页上实时动态显示××年还剩××天××时××分××秒&quot;&gt;网页中实现一个计算当年还剩多少时间的倒数计时程序,要求网页上实时动态显示”××年还剩××天××时××分××秒”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#完成一个函数接受数组作为参数数组元素为整数或者数组数组元素包含整数或数组函数返回扁平化后的数组&quot;&gt;完成一个函数,接受数组作为参数,数组元素为整数或者数组,数组元素包含整数或数组,函数返回扁平化后的数组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何判断一个对象是否为数组&quot;&gt;如何判断一个对象是否为数组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#请评价以下事件监听器代码并给出改进意见&quot;&gt;请评价以下事件监听器代码并给出改进意见&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何判断一个对象是否为函数&quot;&gt;如何判断一个对象是否为函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#编写一个函数接受url中query-string为参数返回解析后的objectquery-string使用applicationx-www-form-urlencoded编码&quot;&gt;编写一个函数接受url中query string为参数,返回解析后的Object,query string使用application/x-www-form-urlencoded编码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#解析一个完整的url返回object包含域与windowlocation相同&quot;&gt;解析一个完整的url,返回Object包含域与window.location相同&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#完成函数getviewportsize返回指定窗口的视口尺寸&quot;&gt;完成函数getViewportSize返回指定窗口的视口尺寸&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#完成函数getscrolloffset返回窗口滚动条偏移量&quot;&gt;完成函数getScrollOffset返回窗口滚动条偏移量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#现有一个字符串richtext是一段富文本需要显示在页面上有个要求需要给其中只包含一个img元素的p标签增加一个叫pic的class请编写代码实现可以使用jquery或kissy&quot;&gt;现有一个字符串richText,是一段富文本,需要显示在页面上.有个要求,需要给其中只包含一个img元素的p标签增加一个叫pic的class.请编写代码实现.可以使用jQuery或KISSY.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#请实现一个event类继承自此类的对象都会拥有两个方法onoffonce和trigger&quot;&gt;请实现一个Event类,继承自此类的对象都会拥有两个方法on,off,once和trigger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#编写一个函数将列表子元素顺序反转&quot;&gt;编写一个函数将列表子元素顺序反转&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#以下函数的作用是空白区域应该填写什么&quot;&gt;以下函数的作用是?空白区域应该填写什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#编写一个函数实现form的序列化即将一个表单中的键值序列化为可提交的字符串&quot;&gt;编写一个函数实现form的序列化(即将一个表单中的键值序列化为可提交的字符串)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#使用原生javascript给下面列表中的li节点绑定点击事件点击时创建一个object对象兼容ie和标准浏览器&quot;&gt;使用原生javascript给下面列表中的li节点绑定点击事件,点击时创建一个Object对象,兼容IE和标准浏览器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#有一个大数组var-a-=-1-2-3-a的长度是100内容填充随机整数的字符串请先构造此数组a然后设计一个算法将其内容去重&quot;&gt;有一个大数组,var a = [‘1’, ‘2’, ‘3’, …];a的长度是100,内容填充随机整数的字符串.请先构造此数组a,然后设计一个算法将其内容去重&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;h1 id=&quot;FE-interview&quot;&gt;&lt;a href=&quot;#FE-interview&quot; class=&quot;headerlink&quot; title=&quot;FE-interview&quot;&gt;&lt;/a&gt;FE-interview&lt;/h1&gt;&lt;p&gt;个人收集的前端知识点、面试题和答案，参考答案仅代表个人观点，方便复习，目录如下，通过文档内搜索目录可快速定位章节&lt;/p&gt;
&lt;h2 id=&quot;HTML，-HTTP，web综合问题&quot;&gt;&lt;a href=&quot;#HTML，-HTTP，web综合问题&quot; class=&quot;headerlink&quot; title=&quot;$HTML， HTTP，web综合问题&quot;&gt;&lt;/a&gt;$HTML， HTTP，web综合问题&lt;/h2&gt;&lt;h3 id=&quot;常见排序算法的时间复杂度-空间复杂度&quot;&gt;&lt;a href=&quot;#常见排序算法的时间复杂度-空间复杂度&quot; class=&quot;headerlink&quot; title=&quot;常见排序算法的时间复杂度,空间复杂度&quot;&gt;&lt;/a&gt;常见排序算法的时间复杂度,空间复杂度&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xsspr.com2.z0.glb.clouddn.com/sort-compare.png&quot; alt=&quot;排序算法比较&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;前端需要注意哪些SEO&quot;&gt;&lt;a href=&quot;#前端需要注意哪些SEO&quot; class=&quot;headerlink&quot; title=&quot;前端需要注意哪些SEO&quot;&gt;&lt;/a&gt;前端需要注意哪些SEO&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;合理的title、description、keywords：搜索对着三项的权重逐个减小，title值强调重点即可，重要关键词出现不要超过2次，而且要靠前，不同页面title要有所不同；description把页面内容高度概括，长度合适，不可过分堆砌关键词，不同页面description有所不同；keywords列举出重要关键词即可&lt;/li&gt;
&lt;li&gt;语义化的HTML代码，符合W3C规范：语义化代码让搜索引擎容易理解网页&lt;/li&gt;
&lt;li&gt;重要内容HTML代码放在最前：搜索引擎抓取HTML顺序是从上到下，有的搜索引擎对抓取长度有限制，保证重要内容一定会被抓取&lt;/li&gt;
&lt;li&gt;重要内容不要用js输出：爬虫不会执行js获取内容&lt;/li&gt;
&lt;li&gt;少用iframe：搜索引擎不会抓取iframe中的内容&lt;/li&gt;
&lt;li&gt;非装饰性图片必须加alt&lt;/li&gt;
&lt;li&gt;提高网站速度：网站速度是搜索引擎排序的一个重要指标&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;web开发中会话跟踪的方法有哪些&quot;&gt;&lt;a href=&quot;#web开发中会话跟踪的方法有哪些&quot; class=&quot;headerlink&quot; title=&quot;web开发中会话跟踪的方法有哪些&quot;&gt;&lt;/a&gt;web开发中会话跟踪的方法有哪些&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;cookie&lt;/li&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;url重写&lt;/li&gt;
&lt;li&gt;隐藏input&lt;/li&gt;
&lt;li&gt;ip地址&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;lt-img-gt-的title和alt有什么区别&quot;&gt;&lt;a href=&quot;#lt-img-gt-的title和alt有什么区别&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;img&amp;gt;的title和alt有什么区别&quot;&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;的&lt;code&gt;title&lt;/code&gt;和&lt;code&gt;alt&lt;/code&gt;有什么区别&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt;是&lt;a href=&quot;http://www.w3.org/TR/html-markup/global-attributes.html#common.attrs.core&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;global attributes&lt;/a&gt;之一，用于为元素提供附加的advisory information。通常当鼠标滑动到元素上的时候显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alt&lt;/code&gt;是&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;的特有属性，是图片内容的等价描述，用于图片无法加载时显示、读屏器阅读图片。可提图片高可访问性，除了纯装饰图片外都必须设置有意义的值，搜索引擎会重点分析。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;doctype是什么-举例常见doctype及特点&quot;&gt;&lt;a href=&quot;#doctype是什么-举例常见doctype及特点&quot; class=&quot;headerlink&quot; title=&quot;doctype是什么,举例常见doctype及特点&quot;&gt;&lt;/a&gt;doctype是什么,举例常见doctype及特点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;!doctype&amp;gt;&lt;/code&gt;声明必须处于HTML文档的头部，在&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;标签之前，HTML5中不区分大小写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;!doctype&amp;gt;&lt;/code&gt;声明不是一个HTML标签，是一个用于告诉浏览器当前HTMl版本的指令&lt;/li&gt;
&lt;li&gt;现代浏览器的html布局引擎通过检查doctype决定使用兼容模式还是标准模式对文档进行渲染，一些浏览器有一个接近标准模型。&lt;/li&gt;
&lt;li&gt;在HTML4.01中&lt;code&gt;&amp;lt;!doctype&amp;gt;&lt;/code&gt;声明指向一个DTD，由于HTML4.01基于SGML，所以DTD指定了标记规则以保证浏览器正确渲染内容&lt;/li&gt;
&lt;li&gt;HTML5不基于SGML，所以不用指定DTD&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常见dotype：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTML4.01 strict&lt;/strong&gt;：不允许使用表现性、废弃元素（如font）以及frameset。声明：&lt;code&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.01//EN&amp;quot; &amp;quot;http://www.w3.org/TR/html4/strict.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML4.01 Transitional&lt;/strong&gt;:允许使用表现性、废弃元素（如font），不允许使用frameset。声明：&lt;code&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.01 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/html4/loose.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML4.01 Frameset&lt;/strong&gt;:允许表现性元素，废气元素以及frameset。声明：&lt;code&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.01 Frameset//EN&amp;quot; &amp;quot;http://www.w3.org/TR/html4/frameset.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XHTML1.0 Strict&lt;/strong&gt;:不使用允许表现性、废弃元素以及frameset。文档必须是结构良好的XML文档。声明：&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XHTML1.0 Transitional&lt;/strong&gt;:允许使用表现性、废弃元素，不允许frameset，文档必须是结构良好的XMl文档。声明： &lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XHTML 1.0 Frameset&lt;/strong&gt;:允许使用表现性、废弃元素以及frameset，文档必须是结构良好的XML文档。声明：&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Frameset//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML 5&lt;/strong&gt;: &lt;code&gt;&amp;lt;!doctype html&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;HTML全局属性-global-attribute-有哪些&quot;&gt;&lt;a href=&quot;#HTML全局属性-global-attribute-有哪些&quot; class=&quot;headerlink&quot; title=&quot;HTML全局属性(global attribute)有哪些&quot;&gt;&lt;/a&gt;HTML全局属性(global attribute)有哪些&lt;/h3&gt;&lt;p&gt;参考资料：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN: html global attribute&lt;/a&gt;或者&lt;a href=&quot;http://www.w3.org/TR/html-markup/global-attributes.html#common.attrs.core&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C HTML global-attributes&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;accesskey&lt;/code&gt;:设置快捷键，提供快速访问元素如&lt;a href=&quot;#&quot; accesskey=&quot;a&quot;&gt;aaa&lt;/a&gt;在windows下的firefox中按&lt;code&gt;alt + shift + a&lt;/code&gt;可激活元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;:为元素设置类标识，多个类名用空格分开，CSS和javascript可通过class属性获取元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contenteditable&lt;/code&gt;: 指定元素内容是否可编辑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contextmenu&lt;/code&gt;: 自定义鼠标右键弹出菜单内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data-*&lt;/code&gt;: 为元素增加自定义属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dir&lt;/code&gt;: 设置元素文本方向&lt;/li&gt;
&lt;li&gt;&lt;code&gt;draggable&lt;/code&gt;: 设置元素是否可拖拽&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dropzone&lt;/code&gt;: 设置元素拖放类型： copy, move, link&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hidden&lt;/code&gt;: 表示一个元素是否与文档。样式上会导致元素不显示，但是不能用这个属性实现样式效果&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;: 元素id，文档内唯一&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: 元素内容的的语言&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spellcheck&lt;/code&gt;: 是否启动拼写和语法检查&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style&lt;/code&gt;: 行内css样式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex&lt;/code&gt;: 设置元素可以获得焦点，通过tab可以导航&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt;: 元素相关的建议信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translate&lt;/code&gt;: 元素和子孙节点内容是否需要本地化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;什么是web语义化-有什么好处&quot;&gt;&lt;a href=&quot;#什么是web语义化-有什么好处&quot; class=&quot;headerlink&quot; title=&quot;什么是web语义化,有什么好处&quot;&gt;&lt;/a&gt;什么是web语义化,有什么好处&lt;/h3&gt;&lt;p&gt;web语义化是指通过HTML标记表示页面包含的信息，包含了HTML标签的语义化和css命名的语义化。&lt;br&gt;HTML标签的语义化是指：通过使用包含语义的标签（如h1-h6）恰当地表示文档结构&lt;br&gt;css命名的语义化是指：为html标签添加有意义的class，id补充未表达的语义，如&lt;a href=&quot;http://en.wikipedia.org/wiki/Microformats&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Microformat&lt;/a&gt;通过添加符合规则的class描述信息&lt;br&gt;为什么需要语义化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去掉样式后页面呈现清晰的结构&lt;/li&gt;
&lt;li&gt;盲人使用读屏器更好地阅读&lt;/li&gt;
&lt;li&gt;搜索引擎更好地理解页面，有利于收录&lt;/li&gt;
&lt;li&gt;便团队项目的可持续运作及维护&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HTTP-method&quot;&gt;&lt;a href=&quot;#HTTP-method&quot; class=&quot;headerlink&quot; title=&quot;HTTP method&quot;&gt;&lt;/a&gt;HTTP method&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;一台服务器要与HTTP1.1兼容，只要为资源实现&lt;strong&gt;GET&lt;/strong&gt;和&lt;strong&gt;HEAD&lt;/strong&gt;方法即可&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;是最常用的方法，通常用于&lt;strong&gt;请求服务器发送某个资源&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HEAD&lt;/strong&gt;与GET类似，但&lt;strong&gt;服务器在响应中值返回首部，不返回实体的主体部分&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;让服务器&lt;strong&gt;用请求的主体部分来创建一个由所请求的URL命名的新文档，或者，如果那个URL已经存在的话，就用干这个主体替代它&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt;起初是用来向服务器输入数据的。实际上，通常会用它来支持HTML的表单。表单中填好的数据通常会被送给服务器，然后由服务器将其发送到要去的地方。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TRACE&lt;/strong&gt;会在目的服务器端发起一个环回诊断，最后一站的服务器会弹回一个TRACE响应并在响应主体中携带它收到的原始请求报文。TRACE方法主要用于诊断，用于验证请求是否如愿穿过了请求/响应链。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPTIONS&lt;/strong&gt;方法请求web服务器告知其支持的各种功能。可以查询服务器支持哪些方法或者对某些特殊资源支持哪些方法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;请求服务器删除请求URL指定的资源&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;从浏览器地址栏输入url到显示页面的步骤-以HTTP为例&quot;&gt;&lt;a href=&quot;#从浏览器地址栏输入url到显示页面的步骤-以HTTP为例&quot; class=&quot;headerlink&quot; title=&quot;从浏览器地址栏输入url到显示页面的步骤(以HTTP为例)&quot;&gt;&lt;/a&gt;从浏览器地址栏输入url到显示页面的步骤(以HTTP为例)&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在浏览器地址栏输入URL&lt;/li&gt;
&lt;li&gt;浏览器查看&lt;strong&gt;缓存&lt;/strong&gt;，如果请求资源在缓存中并且新鲜，跳转到转码步骤&lt;ol&gt;
&lt;li&gt;如果资源未缓存，发起新请求&lt;/li&gt;
&lt;li&gt;如果已缓存，检验是否足够新鲜，足够新鲜直接提供给客户端，否则与服务器进行验证。&lt;/li&gt;
&lt;li&gt;检验新鲜通常有两个HTTP头进行控制&lt;code&gt;Expires&lt;/code&gt;和&lt;code&gt;Cache-Control&lt;/code&gt;：&lt;ul&gt;
&lt;li&gt;HTTP1.0提供Expires，值为一个绝对时间表示缓存新鲜日期&lt;/li&gt;
&lt;li&gt;HTTP1.1增加了Cache-Control: max-age=,值为以秒为单位的最大新鲜时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;浏览器&lt;strong&gt;解析URL&lt;/strong&gt;获取协议，主机，端口，path&lt;/li&gt;
&lt;li&gt;浏览器&lt;strong&gt;组装一个HTTP（GET）请求报文&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;浏览器&lt;strong&gt;获取主机ip地址&lt;/strong&gt;，过程如下：&lt;ol&gt;
&lt;li&gt;浏览器缓存&lt;/li&gt;
&lt;li&gt;本机缓存&lt;/li&gt;
&lt;li&gt;hosts文件&lt;/li&gt;
&lt;li&gt;路由器缓存&lt;/li&gt;
&lt;li&gt;ISP DNS缓存&lt;/li&gt;
&lt;li&gt;DNS递归查询（可能存在负载均衡导致每次IP不一样）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打开一个socket与目标IP地址，端口建立TCP链接&lt;/strong&gt;，三次握手如下：&lt;ol&gt;
&lt;li&gt;客户端发送一个TCP的&lt;strong&gt;SYN=1，Seq=X&lt;/strong&gt;的包到服务器端口&lt;/li&gt;
&lt;li&gt;服务器发回&lt;strong&gt;SYN=1， ACK=X+1， Seq=Y&lt;/strong&gt;的响应包&lt;/li&gt;
&lt;li&gt;客户端发送&lt;strong&gt;ACK=Y+1， Seq=Z&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;TCP链接建立后&lt;strong&gt;发送HTTP请求&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;服务器接受请求并解析，将请求转发到服务程序，如虚拟主机使用HTTP Host头部判断请求的服务程序&lt;/li&gt;
&lt;li&gt;服务器检查&lt;strong&gt;HTTP请求头是否包含缓存验证信息&lt;/strong&gt;如果验证缓存新鲜，返回&lt;strong&gt;304&lt;/strong&gt;等对应状态码&lt;/li&gt;
&lt;li&gt;处理程序读取完整请求并准备HTTP响应，可能需要查询数据库等操作&lt;/li&gt;
&lt;li&gt;服务器将&lt;strong&gt;响应报文通过TCP连接发送回浏览器&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;浏览器接收HTTP响应，然后根据情况选择&lt;strong&gt;关闭TCP连接或者保留重用，关闭TCP连接的四次握手如下&lt;/strong&gt;：&lt;ol&gt;
&lt;li&gt;主动方发送&lt;strong&gt;Fin=1， Ack=Z， Seq= X&lt;/strong&gt;报文&lt;/li&gt;
&lt;li&gt;被动方发送&lt;strong&gt;ACK=X+1， Seq=Z&lt;/strong&gt;报文&lt;/li&gt;
&lt;li&gt;被动方发送&lt;strong&gt;Fin=1， ACK=X， Seq=Y&lt;/strong&gt;报文&lt;/li&gt;
&lt;li&gt;主动方发送&lt;strong&gt;ACK=Y， Seq=X&lt;/strong&gt;报文&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;浏览器检查响应状态吗：是否为1XX，3XX， 4XX， 5XX，这些情况处理与2XX不同&lt;/li&gt;
&lt;li&gt;如果资源可缓存，&lt;strong&gt;进行缓存&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;对响应进行&lt;strong&gt;解码&lt;/strong&gt;（例如gzip压缩）&lt;/li&gt;
&lt;li&gt;根据资源类型决定如何处理（假设资源为HTML文档）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解析HTML文档，构件DOM树，下载资源，构造CSSOM树，执行js脚本&lt;/strong&gt;，这些操作没有严格的先后顺序，以下分别解释&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建DOM树&lt;/strong&gt;：&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Tokenizing&lt;/strong&gt;：根据HTML规范将字符流解析为标记&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lexing&lt;/strong&gt;：词法分析将标记转换为对象并定义属性和规则&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DOM construction&lt;/strong&gt;：根据HTML标记关系将对象组成DOM树&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;解析过程中遇到图片、样式表、js文件，&lt;strong&gt;启动下载&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;构建&lt;strong&gt;CSSOM树&lt;/strong&gt;：&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Tokenizing&lt;/strong&gt;：字符流转换为标记流&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node&lt;/strong&gt;：根据标记创建节点&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSSOM&lt;/strong&gt;：节点创建CSSOM树&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;根据DOM树和CSSOM树构建渲染树&lt;/a&gt;&lt;/strong&gt;:&lt;ol&gt;
&lt;li&gt;从DOM树的根节点遍历所有&lt;strong&gt;可见节点&lt;/strong&gt;，不可见节点包括：1）&lt;code&gt;script&lt;/code&gt;,&lt;code&gt;meta&lt;/code&gt;这样本身不可见的标签。2)被css隐藏的节点，如&lt;code&gt;display: none&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对每一个可见节点，找到恰当的CSSOM规则并应用&lt;/li&gt;
&lt;li&gt;发布可视节点的内容和计算样式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;js解析如下&lt;/strong&gt;：&lt;ol&gt;
&lt;li&gt;浏览器创建Document对象并解析HTML，将解析到的元素和文本节点添加到文档中，此时&lt;strong&gt;document.readystate为loading&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;HTML解析器遇到&lt;strong&gt;没有async和defer的script时&lt;/strong&gt;，将他们添加到文档中，然后执行行内或外部脚本。这些脚本会同步执行，并且在脚本下载和执行时解析器会暂停。这样就可以用document.write()把文本插入到输入流中。&lt;strong&gt;同步脚本经常简单定义函数和注册事件处理程序，他们可以遍历和操作script和他们之前的文档内容&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当解析器遇到设置了&lt;strong&gt;async&lt;/strong&gt;属性的script时，开始下载脚本并继续解析文档。脚本会在它&lt;strong&gt;下载完成后尽快执行&lt;/strong&gt;，但是&lt;strong&gt;解析器不会停下来等它下载&lt;/strong&gt;。异步脚本&lt;strong&gt;禁止使用document.write()&lt;/strong&gt;，它们可以访问自己script和之前的文档元素&lt;/li&gt;
&lt;li&gt;当文档完成解析，document.readState变成interactive&lt;/li&gt;
&lt;li&gt;所有&lt;strong&gt;defer&lt;/strong&gt;脚本会&lt;strong&gt;按照在文档出现的顺序执行&lt;/strong&gt;，延迟脚本&lt;strong&gt;能访问完整文档树&lt;/strong&gt;，禁止使用document.write()&lt;/li&gt;
&lt;li&gt;浏览器&lt;strong&gt;在Document对象上触发DOMContentLoaded事件&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;此时文档完全解析完成，浏览器可能还在等待如图片等内容加载，等这些&lt;strong&gt;内容完成载入并且所有异步脚本完成载入和执行&lt;/strong&gt;，document.readState变为complete,window触发load事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;显示页面&lt;/strong&gt;（HTML解析过程中会逐步显示页面）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;HTTP-request报文结构是怎样的&quot;&gt;&lt;a href=&quot;#HTTP-request报文结构是怎样的&quot; class=&quot;headerlink&quot; title=&quot;HTTP request报文结构是怎样的&quot;&gt;&lt;/a&gt;HTTP request报文结构是怎样的&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rfc2616&lt;/a&gt;中进行了定义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首行是&lt;strong&gt;Request-Line&lt;/strong&gt;包括：&lt;strong&gt;请求方法&lt;/strong&gt;，&lt;strong&gt;请求URI&lt;/strong&gt;，&lt;strong&gt;协议版本&lt;/strong&gt;，&lt;strong&gt;CRLF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;首行之后是若干行&lt;strong&gt;请求头&lt;/strong&gt;，包括&lt;strong&gt;general-header&lt;/strong&gt;，&lt;strong&gt;request-header&lt;/strong&gt;或者&lt;strong&gt;entity-header&lt;/strong&gt;，每个一行以CRLF结束&lt;/li&gt;
&lt;li&gt;请求头和消息实体之间有一个&lt;strong&gt;CRLF分隔&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;根据实际请求需要可能包含一个&lt;strong&gt;消息实体&lt;/strong&gt;&lt;br&gt;一个请求报文例子如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /Protocols/rfc2616/rfc2616-sec5.html HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host: www.w3.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cache-Control: max-age=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Referer: https://www.google.com.hk/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Accept-Encoding: gzip,deflate,sdch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Accept-Language: zh-CN,zh;q=0.8,en;q=0.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cookie: authorstyle=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If-None-Match: &amp;quot;2cc8-3e3073913b100&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If-Modified-Since: Wed, 01 Sep 2004 13:24:52 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name=qiu&amp;amp;age=25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;HTTP-response报文结构是怎样的&quot;&gt;&lt;a href=&quot;#HTTP-response报文结构是怎样的&quot; class=&quot;headerlink&quot; title=&quot;HTTP response报文结构是怎样的&quot;&gt;&lt;/a&gt;HTTP response报文结构是怎样的&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rfc2616&lt;/a&gt;中进行了定义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首行是状态行包括：&lt;strong&gt;HTTP版本，状态码，状态描述&lt;/strong&gt;，后面跟一个CRLF&lt;/li&gt;
&lt;li&gt;首行之后是&lt;strong&gt;若干行响应头&lt;/strong&gt;，包括：&lt;strong&gt;通用头部，响应头部，实体头部&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;响应头部和响应实体之间用&lt;strong&gt;一个CRLF空行&lt;/strong&gt;分隔&lt;/li&gt;
&lt;li&gt;最后是一个可能的&lt;strong&gt;消息实体&lt;/strong&gt;&lt;br&gt;响应报文例子如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HTTP/1.1 200 OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date: Tue, 08 Jul 2014 05:28:43 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Server: Apache/2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Last-Modified: Wed, 01 Sep 2004 13:24:52 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETag: &amp;quot;40d7-3e3073913b100&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Accept-Ranges: bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Content-Length: 16599&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cache-Control: max-age=21600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Expires: Tue, 08 Jul 2014 11:28:43 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;P3P: policyref=&amp;quot;http://www.w3.org/2001/05/P3P/p3p.xml&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Content-Type: text/html; charset=iso-8859-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;name&amp;quot;: &amp;quot;qiu&amp;quot;, &amp;quot;age&amp;quot;: 25&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何进行网站性能优化&quot;&gt;&lt;a href=&quot;#如何进行网站性能优化&quot; class=&quot;headerlink&quot; title=&quot;如何进行网站性能优化&quot;&gt;&lt;/a&gt;如何进行网站性能优化&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://developer.yahoo.com/performance/rules.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;雅虎Best Practices for Speeding Up Your Web Site&lt;/a&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;content方面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;减少HTTP请求：合并文件、CSS精灵、inline Image&lt;/li&gt;
&lt;li&gt;减少DNS查询：DNS查询完成之前浏览器不能从这个主机下载任何任何文件。方法：DNS缓存、将资源分布到恰当数量的主机名，平衡并行下载和DNS查询&lt;/li&gt;
&lt;li&gt;避免重定向：多余的中间访问&lt;/li&gt;
&lt;li&gt;使Ajax可缓存&lt;/li&gt;
&lt;li&gt;非必须组件延迟加载&lt;/li&gt;
&lt;li&gt;未来所需组件预加载&lt;/li&gt;
&lt;li&gt;减少DOM元素数量&lt;/li&gt;
&lt;li&gt;将资源放到不同的域下：浏览器同时从一个域下载资源的数目有限，增加域可以提高并行下载量&lt;/li&gt;
&lt;li&gt;减少iframe数量&lt;/li&gt;
&lt;li&gt;不要404&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Server方面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用CDN&lt;/li&gt;
&lt;li&gt;添加Expires或者Cache-Control响应头&lt;/li&gt;
&lt;li&gt;对组件使用Gzip压缩&lt;/li&gt;
&lt;li&gt;配置ETag&lt;/li&gt;
&lt;li&gt;Flush Buffer Early&lt;/li&gt;
&lt;li&gt;Ajax使用GET进行请求&lt;/li&gt;
&lt;li&gt;避免空src的img标签&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Cookie方面&lt;ol&gt;
&lt;li&gt;减小cookie大小&lt;/li&gt;
&lt;li&gt;引入资源的域名不要包含cookie&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;css方面&lt;ol&gt;
&lt;li&gt;将样式表放到页面顶部&lt;/li&gt;
&lt;li&gt;不使用CSS表达式&lt;/li&gt;
&lt;li&gt;使用&lt;link&gt;不使用@import&lt;/li&gt;
&lt;li&gt;不使用IE的Filter&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Javascript方面&lt;ol&gt;
&lt;li&gt;将脚本放到页面底部&lt;/li&gt;
&lt;li&gt;将javascript和css从外部引入&lt;/li&gt;
&lt;li&gt;压缩javascript和css&lt;/li&gt;
&lt;li&gt;删除不需要的脚本&lt;/li&gt;
&lt;li&gt;减少DOM访问&lt;/li&gt;
&lt;li&gt;合理设计事件监听器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;图片方面&lt;ol&gt;
&lt;li&gt;优化图片：根据实际颜色需要选择色深、压缩&lt;/li&gt;
&lt;li&gt;优化css精灵&lt;/li&gt;
&lt;li&gt;不要在HTML中拉伸图片&lt;/li&gt;
&lt;li&gt;保证favicon.ico小并且可缓存&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;移动方面&lt;ol&gt;
&lt;li&gt;保证组件小于25k&lt;/li&gt;
&lt;li&gt;Pack Components into a Multipart Document&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;什么是渐进增强&quot;&gt;&lt;a href=&quot;#什么是渐进增强&quot; class=&quot;headerlink&quot; title=&quot;什么是渐进增强&quot;&gt;&lt;/a&gt;什么是渐进增强&lt;/h3&gt;&lt;p&gt;渐进增强是指在web设计时强调可访问性、语义化HTML标签、外部样式表和脚本。保证所有人都能访问页面的基本内容和功能同时为高级浏览器和高带宽用户提供更好的用户体验。核心原则如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有浏览器都必须能访问基本内容&lt;/li&gt;
&lt;li&gt;所有浏览器都必须能使用基本功能&lt;/li&gt;
&lt;li&gt;所有内容都包含在语义化标签中&lt;/li&gt;
&lt;li&gt;通过外部CSS提供增强的布局&lt;/li&gt;
&lt;li&gt;通过非侵入式、外部javascript提供增强功能&lt;/li&gt;
&lt;li&gt;end-user web browser preferences are respected&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HTTP状态码及其含义&quot;&gt;&lt;a href=&quot;#HTTP状态码及其含义&quot; class=&quot;headerlink&quot; title=&quot;HTTP状态码及其含义&quot;&gt;&lt;/a&gt;HTTP状态码及其含义&lt;/h3&gt;&lt;p&gt;参考&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC 2616&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1XX：信息状态码&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;100 Continue&lt;/strong&gt;：客户端应当继续发送请求。这个临时相应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求万仇向客户端发送一个最终响应&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;101 Switching Protocols&lt;/strong&gt;：服务器已经理解力客户端的请求，并将通过Upgrade消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到Upgrade消息头中定义的那些协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2XX：成功状态码&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;200 OK&lt;/strong&gt;：请求成功，请求所希望的响应头或数据体将随此响应返回&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;201 Created&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;202 Accepted&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;203 Non-Authoritative Information&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;204 No Content&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;205 Reset Content&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;206 Partial Content&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3XX：重定向&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;300 Multiple Choices&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;301 Moved Permanently&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;302 Found&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;303 See Other&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;304 Not Modified&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;305 Use Proxy&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;306 （unused）&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;307 Temporary Redirect&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4XX：客户端错误&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;400 Bad Request&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;401 Unauthorized&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;402 Payment Required&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;403 Forbidden&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;404 Not Found&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;405 Method Not Allowed&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;406 Not Acceptable&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;407 Proxy Authentication Required&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;408 Request Timeout&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;409 Conflict&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;410 Gone&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;411 Length Required&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;412 Precondition Failed&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;413 Request Entity Too Large&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;414 Request-URI Too Long&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;415 Unsupported Media Type&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;416 Requested Range Not Satisfiable&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;417 Expectation Failed&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5XX: 服务器错误&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;500 Internal Server Error&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;501 Not Implemented&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;502 Bad Gateway&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;503 Service Unavailable&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;504 Gateway Timeout&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;505 HTTP Version Not Supported&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;CSS部分&quot;&gt;&lt;a href=&quot;#CSS部分&quot; class=&quot;headerlink&quot; title=&quot;$CSS部分&quot;&gt;&lt;/a&gt;$CSS部分&lt;/h2&gt;&lt;h3 id=&quot;CSS选择器有哪些&quot;&gt;&lt;a href=&quot;#CSS选择器有哪些&quot; class=&quot;headerlink&quot; title=&quot;CSS选择器有哪些&quot;&gt;&lt;/a&gt;CSS选择器有哪些&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;*通用选择器&lt;/strong&gt;：选择所有元素，&lt;strong&gt;不参与计算优先级&lt;/strong&gt;，兼容性IE6+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;#X id选择器&lt;/strong&gt;：选择id值为X的元素，兼容性：IE6+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.X 类选择器&lt;/strong&gt;： 选择class包含X的元素，兼容性：IE6+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X Y后代选择器&lt;/strong&gt;： 选择满足X选择器的后代节点中满足Y选择器的元素，兼容性：IE6+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X 元素选择器&lt;/strong&gt;： 选择标所有签为X的元素，兼容性：IE6+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:link，：visited，：focus，：hover，：active链接状态&lt;/strong&gt;： 选择特定状态的链接元素，顺序LoVe HAte，兼容性: IE4+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X + Y直接兄弟选择器&lt;/strong&gt;：在&lt;strong&gt;X之后第一个兄弟节点&lt;/strong&gt;中选择满足Y选择器的元素，兼容性： IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X &amp;gt; Y子选择器&lt;/strong&gt;： 选择X的子元素中满足Y选择器的元素，兼容性： IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X ~ Y兄弟&lt;/strong&gt;： 选择&lt;strong&gt;X之后所有兄弟节点&lt;/strong&gt;中满足Y选择器的元素，兼容性： IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr]&lt;/strong&gt;：选择所有设置了attr属性的元素，兼容性IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr=value]&lt;/strong&gt;：选择属性值刚好为value的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr~=value]&lt;/strong&gt;：选择属性值为空白符分隔，其中一个的值刚好是value的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr|=value]&lt;/strong&gt;：选择属性值刚好为value或者value-开头的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr^=value]&lt;/strong&gt;：选择属性值以value开头的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr$=value]&lt;/strong&gt;：选择属性值以value结尾的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[attr*=value]&lt;/strong&gt;：选择属性值中包含value的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[:checked]&lt;/strong&gt;：选择单选框，复选框，下拉框中选中状态下的元素，兼容性：IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:after, X::after&lt;/strong&gt;：after伪元素，选择元素虚拟子元素（元素的最后一个子元素），CSS3中::表示伪元素。兼容性:after为IE8+，::after为IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:hover&lt;/strong&gt;：鼠标移入状态的元素，兼容性a标签IE4+， 所有元素IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:not(selector)&lt;/strong&gt;：选择不符合selector的元素。&lt;strong&gt;不参与计算优先级&lt;/strong&gt;，兼容性：IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::first-letter&lt;/strong&gt;：伪元素，选择块元素第一行的第一个字母，兼容性IE5.5+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::first-line&lt;/strong&gt;：伪元素，选择块元素的第一行，兼容性IE5.5+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:nth-child(an + b)&lt;/strong&gt;：伪类，选择前面有an + b - 1个兄弟节点的元素，其中n&lt;br&gt;&amp;gt;= 0， 兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:nth-last-child(an + b)&lt;/strong&gt;：伪类，选择后面有an + b - 1个兄弟节点的元素&lt;br&gt;其中n &amp;gt;= 0，兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:nth-of-type(an+b)&lt;/strong&gt;：伪类，X为选择器，&lt;strong&gt;解析得到元素标签&lt;/strong&gt;，选择&lt;strong&gt;前面&lt;/strong&gt;有an + b - 1个&lt;strong&gt;相同标签&lt;/strong&gt;兄弟节点的元素。兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:nth-last-of-type(an+b)&lt;/strong&gt;：伪类，X为选择器，解析得到元素标签，选择&lt;strong&gt;后面&lt;/strong&gt;有an+b-1个相同&lt;strong&gt;标签&lt;/strong&gt;兄弟节点的元素。兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:first-child&lt;/strong&gt;：伪类，选择满足X选择器的元素，且这个元素是其父节点的第一个子元素。兼容性IE7+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:last-child&lt;/strong&gt;：伪类，选择满足X选择器的元素，且这个元素是其父节点的最后一个子元素。兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:only-child&lt;/strong&gt;：伪类，选择满足X选择器的元素，且这个元素是其父元素的唯一子元素。兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:only-of-type&lt;/strong&gt;：伪类，选择X选择的元素，&lt;strong&gt;解析得到元素标签&lt;/strong&gt;，如果该元素没有相同类型的兄弟节点时选中它。兼容性IE9+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X:first-of-type&lt;/strong&gt;：伪类，选择X选择的元素，&lt;strong&gt;解析得到元素标签&lt;/strong&gt;，如果该元素&lt;br&gt;是此此类型元素的第一个兄弟。选中它。兼容性IE9+&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;css-sprite是什么-有什么优缺点&quot;&gt;&lt;a href=&quot;#css-sprite是什么-有什么优缺点&quot; class=&quot;headerlink&quot; title=&quot;css sprite是什么,有什么优缺点&quot;&gt;&lt;/a&gt;css sprite是什么,有什么优缺点&lt;/h3&gt;&lt;p&gt;概念：将多个小图片拼接到一个图片中。通过background-position和元素尺寸调节需要显示的背景图案。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;减少HTTP请求数，极大地提高页面加载速度&lt;/li&gt;
&lt;li&gt;增加图片信息重复度，提高压缩比，减少图片大小&lt;/li&gt;
&lt;li&gt;更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;图片合并麻烦&lt;/li&gt;
&lt;li&gt;维护麻烦，修改一个图片可能需要从新布局整个图片，样式&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;display-none-与visibility-hidden-的区别&quot;&gt;&lt;a href=&quot;#display-none-与visibility-hidden-的区别&quot; class=&quot;headerlink&quot; title=&quot;display: none;与visibility: hidden;的区别&quot;&gt;&lt;/a&gt;&lt;code&gt;display: none;&lt;/code&gt;与&lt;code&gt;visibility: hidden;&lt;/code&gt;的区别&lt;/h3&gt;&lt;p&gt;联系：它们都能让元素不可见&lt;/p&gt;
&lt;p&gt;区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;display:none;会让元素完全从渲染树中消失，渲染的时候不占据任何空间；visibility: hidden;不会让元素从渲染树消失，渲染师元素继续占据空间，只是内容不可见&lt;/li&gt;
&lt;li&gt;display: none;是非继承属性，子孙节点消失由于元素从渲染树消失造成，通过修改子孙节点属性无法显示；visibility: hidden;是继承属性，子孙节点消失由于继承了hidden，通过设置visibility: visible;可以让子孙节点显式&lt;/li&gt;
&lt;li&gt;修改常规流中元素的display通常会造成文档重排。修改visibility属性只会造成本元素的重绘。&lt;/li&gt;
&lt;li&gt;读屏器不会读取display: none;元素内容；会读取visibility: hidden;元素内容&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;css-hack原理及常用hack&quot;&gt;&lt;a href=&quot;#css-hack原理及常用hack&quot; class=&quot;headerlink&quot; title=&quot;css hack原理及常用hack&quot;&gt;&lt;/a&gt;css hack原理及常用hack&lt;/h3&gt;&lt;p&gt;原理：利用&lt;strong&gt;不同浏览器对CSS的支持和解析结果不一样&lt;/strong&gt;编写针对特定浏览器样式。常见的hack有1）属性hack。2）选择器hack。3）IE条件注释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IE条件注释：适用于[IE5, IE9]常见格式如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--[if IE 6]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Special instructions for IE 6 here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;选择器hack：不同浏览器对选择器的支持不一样&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/***** Selector Hacks ******/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE6 and below */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* html #uno  &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE7 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*:first-child+html #dos &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE7, FF, Saf, Opera  */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html&amp;gt;body #tres &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE8, FF, Saf, Opera (Everything but IE 6,7) */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html&amp;gt;/**/body #cuatro &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Opera 9.27 and below, safari 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html:first-child #cinco &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Safari 2-3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html[xmlns*=&amp;quot;&amp;quot;] body:last-child #seis &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* safari 3+, chrome 1+, opera9+, ff 3.5+ */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;body:nth-of-type(1) #siete &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* safari 3+, chrome 1+, opera9+, ff 3.5+ */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;body:first-of-type #ocho &amp;#123;  color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* saf3+, chrome1+ */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@media screen and (-webkit-min-device-pixel-ratio:0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #diez  &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* iPhone / mobile webkit */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@media screen and (max-device-width: 480px) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #veintiseis &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Safari 2 - 3.1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html[xmlns*=&amp;quot;&amp;quot;]:root #trece  &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Safari 2 - 3.1, Opera 9.25 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*|html[xmlns*=&amp;quot;&amp;quot;] #catorce &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Everything but IE6-8 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:root *&amp;gt; #quince &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE7 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*+html #dieciocho &amp;#123;  color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Firefox only. 1+ */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#veinticuatro,  x:-moz-any-link  &amp;#123; color: red &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Firefox 3.0+ */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#veinticinco,  x:-moz-any-link, x:default  &amp;#123; color: red  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;属性hack：不同浏览器解析bug或方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* IE6 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#once &amp;#123; _color: blue &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE6, IE7 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#doce &amp;#123; *color: blue; /* or #color: blue */ &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* Everything but IE6 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#diecisiete &amp;#123; color/**/: blue &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE6, IE7, IE8 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#diecinueve &amp;#123; color: blue\9; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE7, IE8 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#veinte &amp;#123; color/*\**/: blue\9; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* IE6, IE7 -- acts as an !important */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#veintesiete &amp;#123; color: blue !ie; &amp;#125; /* string after ! can be anything */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;specified-value-computed-value-used-value计算方法&quot;&gt;&lt;a href=&quot;#specified-value-computed-value-used-value计算方法&quot; class=&quot;headerlink&quot; title=&quot;specified value,computed value,used value计算方法&quot;&gt;&lt;/a&gt;specified value,computed value,used value计算方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;specified value: 计算方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果样式表设置了一个值，使用这个值&lt;/li&gt;
&lt;li&gt;如果没有设置值，这个属性是继承属性，从父元素继承&lt;/li&gt;
&lt;li&gt;如果没设置，并且不是继承属性，使用css规范指定的初始值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;computed value: 以specified value根据规范定义的行为进行计算，通常将相对值计算为绝对值，例如em根据font-size进行计算。一些使用百分数并且需要布局来决定最终值的属性，如width，margin。百分数就直接作为computed value。line-height的无单位值也直接作为computed value。这些值将在计算used value时得到绝对值。&lt;strong&gt;computed value的主要作用是用于继承&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;used value：属性计算后的最终值，对于大多数属性可以通过window.getComputedStyle获得，尺寸值单位为像素。以下属性依赖于布局，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background-position&lt;/li&gt;
&lt;li&gt;bottom, left, right, top&lt;/li&gt;
&lt;li&gt;height, width&lt;/li&gt;
&lt;li&gt;margin-bottom, margin-left, margin-right, margin-top&lt;/li&gt;
&lt;li&gt;min-height, min-width&lt;/li&gt;
&lt;li&gt;padding-bottom, padding-left, padding-right, padding-top&lt;/li&gt;
&lt;li&gt;text-indent&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;link与-import的区别&quot;&gt;&lt;a href=&quot;#link与-import的区别&quot; class=&quot;headerlink&quot; title=&quot;link与@import的区别&quot;&gt;&lt;/a&gt;&lt;code&gt;link&lt;/code&gt;与&lt;code&gt;@import&lt;/code&gt;的区别&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;link&lt;/code&gt;是HTML方式， &lt;code&gt;@import&lt;/code&gt;是CSS方式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;link&lt;/code&gt;最大限度支持并行下载，&lt;code&gt;@import&lt;/code&gt;过多嵌套导致串行下载，出现&lt;a href=&quot;http://www.bluerobot.com/web/css/fouc.asp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FOUC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;link&lt;/code&gt;可以通过&lt;code&gt;rel=&amp;quot;alternate stylesheet&amp;quot;&lt;/code&gt;指定候选样式&lt;/li&gt;
&lt;li&gt;浏览器对&lt;code&gt;link&lt;/code&gt;支持早于&lt;code&gt;@import&lt;/code&gt;，可以使用&lt;code&gt;@import&lt;/code&gt;对老浏览器隐藏样式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@import&lt;/code&gt;必须在样式规则之前，可以在css文件中引用其他文件&lt;/li&gt;
&lt;li&gt;总体来说：&lt;strong&gt;&lt;a href=&quot;http://www.stevesouders.com/blog/2009/04/09/dont-use-import/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link优于@import&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;display-block-和display-inline-的区别&quot;&gt;&lt;a href=&quot;#display-block-和display-inline-的区别&quot; class=&quot;headerlink&quot; title=&quot;display: block;和display: inline;的区别&quot;&gt;&lt;/a&gt;&lt;code&gt;display: block;&lt;/code&gt;和&lt;code&gt;display: inline;&lt;/code&gt;的区别&lt;/h3&gt;&lt;p&gt;&lt;code&gt;block&lt;/code&gt;元素特点：&lt;/p&gt;
&lt;p&gt;1.处于常规流中时，如果&lt;code&gt;width&lt;/code&gt;没有设置，会自动填充满父容器&lt;br&gt;2.可以应用&lt;code&gt;margin/padding&lt;/code&gt;&lt;br&gt;3.在没有设置高度的情况下会扩展高度以包含常规流中的子元素&lt;br&gt;4.处于常规流中时布局时在前后元素位置之间（独占一个水平空间）&lt;br&gt;5.忽略&lt;code&gt;vertical-align&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;inline&lt;/code&gt;元素特点&lt;/p&gt;
&lt;p&gt;1.水平方向上根据&lt;code&gt;direction&lt;/code&gt;依次布局&lt;br&gt;2.不会在元素前后进行换行&lt;br&gt;3.受&lt;code&gt;white-space&lt;/code&gt;控制&lt;br&gt;4.&lt;code&gt;margin/padding&lt;/code&gt;在竖直方向上无效，水平方向上有效&lt;br&gt;5.&lt;code&gt;width/height&lt;/code&gt;属性对非替换行内元素无效，宽度由元素内容决定&lt;br&gt;6.非替换行内元素的行框高由&lt;code&gt;line-height&lt;/code&gt;确定，替换行内元素的行框高由&lt;code&gt;height&lt;/code&gt;,&lt;code&gt;margin&lt;/code&gt;,&lt;code&gt;padding&lt;/code&gt;,&lt;code&gt;border&lt;/code&gt;决定&lt;br&gt;6.浮动或绝对定位时会转换为&lt;code&gt;block&lt;/code&gt;&lt;br&gt;7.&lt;code&gt;vertical-align&lt;/code&gt;属性生效&lt;/p&gt;
&lt;h3 id=&quot;PNG-GIF-JPG的区别及如何选&quot;&gt;&lt;a href=&quot;#PNG-GIF-JPG的区别及如何选&quot; class=&quot;headerlink&quot; title=&quot;PNG,GIF,JPG的区别及如何选&quot;&gt;&lt;/a&gt;PNG,GIF,JPG的区别及如何选&lt;/h3&gt;&lt;p&gt;参考资料： &lt;a href=&quot;http://www.yuiblog.com/blog/2008/11/04/imageopt-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;选择正确的图片格式&lt;/a&gt;&lt;br&gt;&lt;strong&gt;GIF&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;8位像素，256色&lt;/li&gt;
&lt;li&gt;无损压缩&lt;/li&gt;
&lt;li&gt;支持简单动画&lt;/li&gt;
&lt;li&gt;支持boolean透明&lt;/li&gt;
&lt;li&gt;适合简单动画&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;JPEG&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;颜色限于256&lt;/li&gt;
&lt;li&gt;有损压缩&lt;/li&gt;
&lt;li&gt;可控制压缩质量&lt;/li&gt;
&lt;li&gt;不支持透明&lt;/li&gt;
&lt;li&gt;适合照片&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;PNG&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有PNG8和truecolor PNG&lt;/li&gt;
&lt;li&gt;PNG8类似GIF颜色上限为256，文件小，支持alpha透明度，无动画&lt;/li&gt;
&lt;li&gt;适合图标、背景、按钮&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;CSS有哪些继承属性&quot;&gt;&lt;a href=&quot;#CSS有哪些继承属性&quot; class=&quot;headerlink&quot; title=&quot;CSS有哪些继承属性&quot;&gt;&lt;/a&gt;CSS有哪些继承属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;关于文字排版的属性如：&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/word-break&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;word-break&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;letter-spacing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-align&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;text-align&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;text-rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/word-spacing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;word-spacing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/white-space&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;white-space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;text-indent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;text-transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;text-shadow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/line-height&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;line-height&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/visibility&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;visibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/cursor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cursor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;IE6浏览器有哪些常见的bug-缺陷或者与标准不一致的地方-如何解决&quot;&gt;&lt;a href=&quot;#IE6浏览器有哪些常见的bug-缺陷或者与标准不一致的地方-如何解决&quot; class=&quot;headerlink&quot; title=&quot;IE6浏览器有哪些常见的bug,缺陷或者与标准不一致的地方,如何解决&quot;&gt;&lt;/a&gt;IE6浏览器有哪些常见的bug,缺陷或者与标准不一致的地方,如何解决&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;IE6不支持min-height，解决办法使用css hack：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.target &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    min-height: 100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: auto !important;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 100px;   // IE6下内容高度超过会自动扩展高度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ol&lt;/code&gt;内&lt;code&gt;li&lt;/code&gt;的序号全为1，不递增。解决方法：为li设置样式&lt;code&gt;display: list-item;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;未定位父元素&lt;code&gt;overflow: auto;&lt;/code&gt;，包含&lt;code&gt;position: relative;&lt;/code&gt;子元素，子元素高于父元素时会溢出。解决办法：1）子元素去掉&lt;code&gt;position: relative;&lt;/code&gt;; 2）不能为子元素去掉定位时，父元素&lt;code&gt;position: relative;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.outer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 215px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    border: 1px solid red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    overflow: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position: relative;  /* 修复bug */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.inner &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background-color: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;outer&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;inner&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;IE6只支持&lt;code&gt;a&lt;/code&gt;标签的&lt;code&gt;:hover&lt;/code&gt;伪类，解决方法：使用js为元素监听mouseenter，mouseleave事件，添加类实现效果：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.p:hover,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.hover &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p class=&amp;quot;p&amp;quot; id=&amp;quot;target&amp;quot;&amp;gt;aaaa bbbbb&amp;lt;span&amp;gt;DDDDDDDDDDDd&amp;lt;/span&amp;gt; aaaa lkjlkjdf j&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function addClass(elem, cls) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (elem.className) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elem.className += &amp;apos; &amp;apos; + cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elem.className = cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function removeClass(elem, cls) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var className = &amp;apos; &amp;apos; + elem.className + &amp;apos; &amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var reg = new RegExp(&amp;apos; +&amp;apos; + cls + &amp;apos; +&amp;apos;, &amp;apos;g&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elem.className = className.replace(reg, &amp;apos; &amp;apos;).replace(/^ +| +$/, &amp;apos;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var target = document.getElementById(&amp;apos;target&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (target.attachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target.attachEvent(&amp;apos;onmouseenter&amp;apos;, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addClass(target, &amp;apos;hover&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target.attachEvent(&amp;apos;onmouseleave&amp;apos;, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        removeClass(target, &amp;apos;hover&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;IE5-8不支持&lt;code&gt;opacity&lt;/code&gt;，解决办法：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.opacity &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opacity: 0.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filter: alpha(opacity=60); /* for IE5-7 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -ms-filter: &amp;quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=60)&amp;quot;; /* for IE 8*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;IE6在设置&lt;code&gt;height&lt;/code&gt;小于&lt;code&gt;font-size&lt;/code&gt;时高度值为&lt;code&gt;font-size&lt;/code&gt;，解决办法：&lt;code&gt;font-size: 0;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;IE6不支持PNG透明背景，解决办法: &lt;strong&gt;IE6下使用gif图片&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;IE6-7不支持&lt;code&gt;display: inline-block&lt;/code&gt;解决办法：设置inline并触发hasLayout&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*display: inline;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*zoom: 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;IE6下浮动元素在浮动方向上与父元素边界接触元素的外边距会加倍。解决办法：&lt;br&gt;1）使用padding控制间距。&lt;br&gt;2）浮动元素&lt;code&gt;display: inline;&lt;/code&gt;这样解决问题且无任何副作用：css标准规定浮动元素display:inline会自动调整为block&lt;/li&gt;
&lt;li&gt;通过为块级元素设置宽度和左右margin为auto时，IE6不能实现水平居中，解决方法：为父元素设置&lt;code&gt;text-align: center;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;容器包含若干浮动元素时如何清理-包含-浮动&quot;&gt;&lt;a href=&quot;#容器包含若干浮动元素时如何清理-包含-浮动&quot; class=&quot;headerlink&quot; title=&quot;容器包含若干浮动元素时如何清理(包含)浮动&quot;&gt;&lt;/a&gt;容器包含若干浮动元素时如何清理(包含)浮动&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;容器元素闭合标签前添加额外元素并设置&lt;code&gt;clear: both&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;父元素触发块级格式化上下文(见块级可视化上下文部分)&lt;/li&gt;
&lt;li&gt;设置容器元素伪元素进行清理&lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;推荐的清理浮动方法&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 在标准浏览器下使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 1 content内容为空格用于修复opera下文档中出现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   contenteditable属性时在清理浮动元素上下的空白&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 2 使用display使用table而不是block：可以防止容器和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   子元素top-margin折叠,这样能使清理效果与BFC，IE6/7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   zoom: 1;一致&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.clearfix:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.clearfix:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content: &amp;quot; &amp;quot;; /* 1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    display: table; /* 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.clearfix:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clear: both;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* IE 6/7下使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 通过触发hasLayout实现包含浮动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.clearfix &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *zoom: 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;什么是FOUC-如何避免&quot;&gt;&lt;a href=&quot;#什么是FOUC-如何避免&quot; class=&quot;headerlink&quot; title=&quot;什么是FOUC?如何避免&quot;&gt;&lt;/a&gt;什么是FOUC?如何避免&lt;/h3&gt;&lt;p&gt;Flash Of Unstyled Content：用户定义样式表加载之前浏览器使用默认样式显示文档，用户样式加载渲染之后再从新显示文档，造成页面闪烁。&lt;strong&gt;解决方法&lt;/strong&gt;：把样式表放到文档的&lt;code&gt;head&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何创建块级格式化上下文-block-formatting-context-BFC有什么用&quot;&gt;&lt;a href=&quot;#如何创建块级格式化上下文-block-formatting-context-BFC有什么用&quot; class=&quot;headerlink&quot; title=&quot;如何创建块级格式化上下文(block formatting context),BFC有什么用&quot;&gt;&lt;/a&gt;如何创建块级格式化上下文(block formatting context),BFC有什么用&lt;/h3&gt;&lt;p&gt;创建规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根元素&lt;/li&gt;
&lt;li&gt;浮动元素（&lt;code&gt;float&lt;/code&gt;不是&lt;code&gt;none&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;绝对定位元素（&lt;code&gt;position&lt;/code&gt;取值为&lt;code&gt;absolute&lt;/code&gt;或&lt;code&gt;fixed&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display&lt;/code&gt;取值为&lt;code&gt;inline-block&lt;/code&gt;,&lt;code&gt;table-cell&lt;/code&gt;, &lt;code&gt;table-caption&lt;/code&gt;,&lt;code&gt;flex&lt;/code&gt;, &lt;code&gt;inline-flex&lt;/code&gt;之一的元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overflow&lt;/code&gt;不是&lt;code&gt;visible&lt;/code&gt;的元素&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以包含浮动元素&lt;/li&gt;
&lt;li&gt;不被浮动元素覆盖&lt;/li&gt;
&lt;li&gt;阻止父子元素的margin折叠&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;display-float-position的关系&quot;&gt;&lt;a href=&quot;#display-float-position的关系&quot; class=&quot;headerlink&quot; title=&quot;display,float,position的关系&quot;&gt;&lt;/a&gt;display,float,position的关系&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果&lt;code&gt;display&lt;/code&gt;为none，那么position和float都不起作用，这种情况下元素不产生框&lt;/li&gt;
&lt;li&gt;否则，如果position值为absolute或者fixed，框就是绝对定位的，float的计算值为none，display根据下面的表格进行调整。&lt;/li&gt;
&lt;li&gt;否则，如果float不是none，框是浮动的，display根据下表进行调整&lt;/li&gt;
&lt;li&gt;否则，如果元素是根元素，display根据下表进行调整&lt;/li&gt;
&lt;li&gt;其他情况下display的值为指定值&lt;br&gt;总结起来：&lt;strong&gt;绝对定位、浮动、根元素都需要调整&lt;code&gt;display&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsspr.com2.z0.glb.clouddn.com/display-adjust.png&quot; alt=&quot;display转换规则&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;外边距折叠-collapsing-margins&quot;&gt;&lt;a href=&quot;#外边距折叠-collapsing-margins&quot; class=&quot;headerlink&quot; title=&quot;外边距折叠(collapsing margins)&quot;&gt;&lt;/a&gt;外边距折叠(collapsing margins)&lt;/h3&gt;&lt;p&gt;毗邻的两个或多个&lt;code&gt;margin&lt;/code&gt;会合并成一个margin，叫做外边距折叠。规则如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;两个或多个毗邻的普通流中的块元素垂直方向上的margin会折叠&lt;/li&gt;
&lt;li&gt;浮动元素/inline-block元素/绝对定位元素的margin不会和垂直方向上的其他元素的margin折叠&lt;/li&gt;
&lt;li&gt;创建了块级格式化上下文的元素，不会和它的子元素发生margin折叠&lt;/li&gt;
&lt;li&gt;元素自身的margin-bottom和margin-top相邻时也会折叠&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;如何确定一个元素的包含块-containing-block&quot;&gt;&lt;a href=&quot;#如何确定一个元素的包含块-containing-block&quot; class=&quot;headerlink&quot; title=&quot;如何确定一个元素的包含块(containing block)&quot;&gt;&lt;/a&gt;如何确定一个元素的包含块(containing block)&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;根元素的包含块叫做初始包含块，在连续媒体中他的尺寸与viewport相同并且anchored at the canvas origin；对于paged media，它的尺寸等于page area。初始包含块的direction属性与根元素相同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;position&lt;/code&gt;为&lt;code&gt;relative&lt;/code&gt;或者&lt;code&gt;static&lt;/code&gt;的元素，它的包含块由最近的块级（&lt;code&gt;display&lt;/code&gt;为&lt;code&gt;block&lt;/code&gt;,&lt;code&gt;list-item&lt;/code&gt;, &lt;code&gt;table&lt;/code&gt;）祖先元素的&lt;strong&gt;内容框&lt;/strong&gt;组成&lt;/li&gt;
&lt;li&gt;如果元素&lt;code&gt;position&lt;/code&gt;为&lt;code&gt;fixed&lt;/code&gt;。对于连续媒体，它的包含块为viewport；对于paged media，包含块为page area&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果元素&lt;code&gt;position&lt;/code&gt;为&lt;code&gt;absolute&lt;/code&gt;，它的包含块由祖先元素中最近一个&lt;code&gt;position&lt;/code&gt;为&lt;code&gt;relative&lt;/code&gt;,&lt;code&gt;absolute&lt;/code&gt;或者&lt;code&gt;fixed&lt;/code&gt;的元素产生，规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果祖先元素为行内元素，the containing block is the bounding box around the &lt;strong&gt;padding boxes&lt;/strong&gt; of the first and the last inline boxes generated for that element.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他情况下包含块由祖先节点的&lt;strong&gt;padding edge&lt;/strong&gt;组成&lt;/p&gt;
&lt;p&gt;如果找不到定位的祖先元素，包含块为&lt;strong&gt;初始包含块&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;stacking-context-布局规则&quot;&gt;&lt;a href=&quot;#stacking-context-布局规则&quot; class=&quot;headerlink&quot; title=&quot;stacking context,布局规则&quot;&gt;&lt;/a&gt;stacking context,布局规则&lt;/h3&gt;&lt;p&gt;z轴上的默认层叠顺序如下（从下到上）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根元素的边界和背景&lt;/li&gt;
&lt;li&gt;常规流中的元素按照html中顺序&lt;/li&gt;
&lt;li&gt;浮动块&lt;/li&gt;
&lt;li&gt;positioned元素按照html中出现顺序&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如何创建stacking context：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根元素&lt;/li&gt;
&lt;li&gt;z-index不为auto的定位元素&lt;/li&gt;
&lt;li&gt;a flex item with a z-index value other than ‘auto’&lt;/li&gt;
&lt;li&gt;opacity小于1的元素&lt;/li&gt;
&lt;li&gt;在移动端webkit和chrome22+，z-index为auto，position: fixed也将创建新的stacking context&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;如何水平居中一个元素&quot;&gt;&lt;a href=&quot;#如何水平居中一个元素&quot; class=&quot;headerlink&quot; title=&quot;如何水平居中一个元素&quot;&gt;&lt;/a&gt;如何水平居中一个元素&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果需要居中的元素为&lt;strong&gt;常规流中inline元素&lt;/strong&gt;，为父元素设置&lt;code&gt;text-align: center;&lt;/code&gt;即可实现&lt;/li&gt;
&lt;li&gt;如果需要居中的元素为&lt;strong&gt;常规流中block元素&lt;/strong&gt;，1）为元素设置宽度，2）设置左右margin为auto。3）IE6下需在父元素上设置&lt;code&gt;text-align: center;&lt;/code&gt;,再给子元素恢复需要的值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aaaaaa aaaaaa a a a a a a a a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #DDD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-align: center; /* 3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .content &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 500px;      /* 1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-align: left;  /* 3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 0 auto;    /* 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果需要居中的元素为&lt;strong&gt;浮动元素&lt;/strong&gt;，1）为元素设置宽度，2）&lt;code&gt;position: relative;&lt;/code&gt;，3）浮动方向偏移量（left或者right）设置为50%，4）浮动方向上的margin设置为元素宽度一半乘以-1&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aaaaaa aaaaaa a a a a a a a a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #DDD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .content &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 500px;         /* 1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: relative;   /* 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left: 50%;            /* 3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-left: -250px;  /* 4 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-color: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果需要居中的元素为&lt;strong&gt;绝对定位元素&lt;/strong&gt;，1）为元素设置宽度，2）偏移量设置为50%，3）偏移方向外边距设置为元素宽度一半乘以-1&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aaaaaa aaaaaa a a a a a a a a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #DDD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .content &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 800px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-left: -400px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-color: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果需要居中的元素为&lt;strong&gt;绝对定位元素&lt;/strong&gt;，1）为元素设置宽度，2）设置左右偏移量都为0,3）设置左右外边距都为auto&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aaaaaa aaaaaa a a a a a a a a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #DDD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .content &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 800px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 0 auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        right: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-color: purple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何竖直居中一个元素&quot;&gt;&lt;a href=&quot;#如何竖直居中一个元素&quot; class=&quot;headerlink&quot; title=&quot;如何竖直居中一个元素&quot;&gt;&lt;/a&gt;如何竖直居中一个元素&lt;/h3&gt;&lt;p&gt;参考资料：&lt;a href=&quot;http://www.vanseodesign.com/css/vertical-centering/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;6 Methods For Vertical Centering With CSS&lt;/a&gt;。 &lt;a href=&quot;http://blog.csdn.net/freshlover/article/details/11579669&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;盘点8种CSS实现垂直居中&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要居中元素为&lt;strong&gt;单行文本&lt;/strong&gt;，为包含文本的元素设置大于&lt;code&gt;font-size&lt;/code&gt;的&lt;code&gt;line-height&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p class=&amp;quot;text&amp;quot;&amp;gt;center text&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.text &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    line-height: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;javascript概念部分&quot;&gt;&lt;a href=&quot;#javascript概念部分&quot; class=&quot;headerlink&quot; title=&quot;$javascript概念部分&quot;&gt;&lt;/a&gt;$javascript概念部分&lt;/h2&gt;&lt;h3 id=&quot;DOM元素e的e-getAttribute-propName-和e-propName有什么区别和联系&quot;&gt;&lt;a href=&quot;#DOM元素e的e-getAttribute-propName-和e-propName有什么区别和联系&quot; class=&quot;headerlink&quot; title=&quot;DOM元素e的e.getAttribute(propName)和e.propName有什么区别和联系&quot;&gt;&lt;/a&gt;DOM元素e的e.getAttribute(propName)和e.propName有什么区别和联系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;e.getAttribute()，是标准DOM操作文档元素属性的方法，具有通用性可在任意文档上使用，返回元素在源文件中&lt;strong&gt;设置的属性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;e.propName通常是在HTML文档中访问特定元素的&lt;strong&gt;特性&lt;/strong&gt;，浏览器解析元素后生成对应对象（如a标签生成HTMLAnchorElement），这些对象的特性会根据特定规则结合属性设置得到，对于没有对应特性的属性，只能使用getAttribute进行访问&lt;/li&gt;
&lt;li&gt;e.getAttribute()返回值是源文件中设置的值，类型是字符串或者null（有的实现返回””）&lt;/li&gt;
&lt;li&gt;e.propName返回值可能是字符串、布尔值、对象、undefined等&lt;/li&gt;
&lt;li&gt;大部分attribute与property是一一对应关系，修改其中一个会影响另一个，如id，title等属性&lt;/li&gt;
&lt;li&gt;一些布尔属性&lt;code&gt;&amp;lt;input hidden/&amp;gt;&lt;/code&gt;的检测设置需要hasAttribute和removeAttribute来完成，或者设置对应property&lt;/li&gt;
&lt;li&gt;像&lt;code&gt;&amp;lt;a href=&amp;quot;../index.html&amp;quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;中href属性，转换成property的时候需要通过转换得到完整URL&lt;/li&gt;
&lt;li&gt;一些attribute和property不是一一对应如：form控件中&lt;code&gt;&amp;lt;input value=&amp;quot;hello&amp;quot;/&amp;gt;&lt;/code&gt;对应的是defaultValue，修改或设置value property修改的是控件当前值，setAttribute修改value属性不会改变value property&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;offsetWidth-offsetHeight-clientWidth-clientHeight与scrollWidth-scrollHeight的区别&quot;&gt;&lt;a href=&quot;#offsetWidth-offsetHeight-clientWidth-clientHeight与scrollWidth-scrollHeight的区别&quot; class=&quot;headerlink&quot; title=&quot;offsetWidth/offsetHeight,clientWidth/clientHeight与scrollWidth/scrollHeight的区别&quot;&gt;&lt;/a&gt;offsetWidth/offsetHeight,clientWidth/clientHeight与scrollWidth/scrollHeight的区别&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;offsetWidth/offsetHeight返回值包含&lt;strong&gt;content + padding + border&lt;/strong&gt;，效果与e.getBoundingClientRect()相同&lt;/li&gt;
&lt;li&gt;clientWidth/clientHeight返回值只包含&lt;strong&gt;content + padding&lt;/strong&gt;，如果有滚动条，也&lt;strong&gt;不包含滚动条&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;scrollWidth/scrollHeight返回值包含&lt;strong&gt;content + padding + 溢出内容的尺寸&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/hh781509(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Measuring Element Dimension and Location with CSSOM in Windows Internet Explorer 9&lt;/a&gt;.aspx)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsspr.com2.z0.glb.clouddn.com/element-size.png&quot; alt=&quot;元素尺寸&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;XMLHttpRequest通用属性和方法&quot;&gt;&lt;a href=&quot;#XMLHttpRequest通用属性和方法&quot; class=&quot;headerlink&quot; title=&quot;XMLHttpRequest通用属性和方法&quot;&gt;&lt;/a&gt;XMLHttpRequest通用属性和方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;readyState&lt;/code&gt;:表示请求状态的整数，取值：&lt;ul&gt;
&lt;li&gt;UNSENT（0）：对象已创建&lt;/li&gt;
&lt;li&gt;OPENED（1）：open()成功调用，在这个状态下，可以为xhr设置请求头，或者使用send()发送请求&lt;/li&gt;
&lt;li&gt;HEADERS_RECEIVED(2)：所有重定向已经自动完成访问，并且最终响应的HTTP头已经收到&lt;/li&gt;
&lt;li&gt;LOADING(3)：响应体正在接收&lt;/li&gt;
&lt;li&gt;DONE(4)：数据传输完成或者传输产生错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onreadystatechange&lt;/code&gt;：readyState改变时调用的函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;：服务器返回的HTTP状态码（如，200， 404）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statusText&lt;/code&gt;:服务器返回的HTTP状态信息（如，OK，No Content）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;responseText&lt;/code&gt;:作为字符串形式的来自服务器的完整响应&lt;/li&gt;
&lt;li&gt;&lt;code&gt;responseXML&lt;/code&gt;: Document对象，表示服务器的响应解析成的XML文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abort()&lt;/code&gt;:取消异步HTTP请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getAllResponseHeaders()&lt;/code&gt;: 返回一个字符串，包含响应中服务器发送的全部HTTP报头。每个报头都是一个用冒号分隔开的名/值对，并且使用一个回车/换行来分隔报头行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getResponseHeader(headerName)&lt;/code&gt;:返回headName对应的报头值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open(method, url, asynchronous [, user, password])&lt;/code&gt;:初始化准备发送到服务器上的请求。method是HTTP方法，不区分大小写；url是请求发送的相对或绝对URL；asynchronous表示请求是否异步；user和password提供身份验证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setRequestHeader(name, value)&lt;/code&gt;:设置HTTP报头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;send(body)&lt;/code&gt;:对服务器请求进行初始化。参数body包含请求的主体部分，对于POST请求为键值对字符串；对于GET请求，为null&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;focus-blur与focusin-focusout的区别与联系&quot;&gt;&lt;a href=&quot;#focus-blur与focusin-focusout的区别与联系&quot; class=&quot;headerlink&quot; title=&quot;focus/blur与focusin/focusout的区别与联系&quot;&gt;&lt;/a&gt;focus/blur与focusin/focusout的区别与联系&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;focus/blur不冒泡，focusin/focusout冒泡&lt;/li&gt;
&lt;li&gt;focus/blur兼容性好，focusin/focusout在除FireFox外的浏览器下都保持良好兼容性，如需使用事件托管，可考虑在FireFox下使用事件捕获elem.addEventListener(‘focus’, handler, true)&lt;/li&gt;
&lt;li&gt;可获得焦点的元素：&lt;ol&gt;
&lt;li&gt;window&lt;/li&gt;
&lt;li&gt;链接被点击或键盘操作&lt;/li&gt;
&lt;li&gt;表单空间被点击或键盘操作&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;tabindex&lt;/code&gt;属性的元素被点击或键盘操作&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;mouseover-mouseout与mouseenter-mouseleave的区别与联系&quot;&gt;&lt;a href=&quot;#mouseover-mouseout与mouseenter-mouseleave的区别与联系&quot; class=&quot;headerlink&quot; title=&quot;mouseover/mouseout与mouseenter/mouseleave的区别与联系&quot;&gt;&lt;/a&gt;mouseover/mouseout与mouseenter/mouseleave的区别与联系&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;mouseover/mouseout是标准事件，&lt;strong&gt;所有浏览器都支持&lt;/strong&gt;；mouseenter/mouseleave是IE5.5引入的特有事件后来被DOM3标准采纳，现代标准浏览器也支持&lt;/li&gt;
&lt;li&gt;mouseover/mouseout是&lt;strong&gt;冒泡&lt;/strong&gt;事件；mouseenter/mouseleave&lt;strong&gt;不冒泡&lt;/strong&gt;。需要为&lt;strong&gt;多个元素监听鼠标移入/出事件时，推荐mouseover/mouseout托管，提高性能&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;标准事件模型中event.target表示发生移入/出的元素,&lt;strong&gt;vent.relatedTarget&lt;/strong&gt;对应移出/如元素；在老IE中event.srcElement表示发生移入/出的元素，&lt;strong&gt;event.toElement&lt;/strong&gt;表示移出的目标元素，&lt;strong&gt;event.fromElement&lt;/strong&gt;表示移入时的来源元素&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例子：鼠标从div#target元素移出时进行处理，判断逻辑如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;target&amp;quot;&amp;gt;&amp;lt;span&amp;gt;test&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
var target = document.getElementById(&amp;apos;target&amp;apos;);
if (target.addEventListener) {
  target.addEventListener(&amp;apos;mouseout&amp;apos;, mouseoutHandler, false);
} else if (target.attachEvent) {
  target.attachEvent(&amp;apos;onmouseout&amp;apos;, mouseoutHandler);
}

function mouseoutHandler(e) {
  e = e || window.event;
  var target = e.target || e.srcElement;

  // 判断移出鼠标的元素是否为目标元素
  if (target.id !== &amp;apos;target&amp;apos;) {
    return;
  }

  // 判断鼠标是移出元素还是移到子元素
  var relatedTarget = event.relatedTarget || e.toElement;
  while (relatedTarget !== target
    &amp;amp;&amp;amp; relatedTarget.nodeName.toUpperCase() !== &amp;apos;BODY&amp;apos;) {
    relatedTarget = relatedTarget.parentNode;
  }

  // 如果相等，说明鼠标在元素内部移动
  if (relatedTarget === target) {
    return;
  }

  // 执行需要操作
  //alert(&amp;apos;鼠标移出&amp;apos;);

}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;sessionStorage-localStorage-cookie区别&quot;&gt;&lt;a href=&quot;#sessionStorage-localStorage-cookie区别&quot; class=&quot;headerlink&quot; title=&quot;sessionStorage,localStorage,cookie区别&quot;&gt;&lt;/a&gt;sessionStorage,localStorage,cookie区别&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;都会在浏览器端保存，有大小限制，同源限制&lt;/li&gt;
&lt;li&gt;cookie会在请求时发送到服务器，作为会话标识，服务器可修改cookie；web storage不会发送到服务器&lt;/li&gt;
&lt;li&gt;cookie有path概念，子路径可以访问父路径cookie，父路径不能访问子路径cookie&lt;/li&gt;
&lt;li&gt;有效期：cookie在设置的有效期内有效，默认为浏览器关闭；sessionStorage在窗口关闭前有效，localStorage长期有效，直到用户删除&lt;/li&gt;
&lt;li&gt;共享：sessionStorage不能共享，localStorage在同源文档之间共享，cookie在同源且符合path规则的文档之间共享&lt;/li&gt;
&lt;li&gt;localStorage的修改会促发其他文档窗口的update事件&lt;/li&gt;
&lt;li&gt;cookie有secure属性要求HTTPS传输&lt;/li&gt;
&lt;li&gt;浏览器不能保存超过300个cookie，单个服务器不能超过20个，每个cookie不能超过4k。web storage大小支持能达到5M&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;javascript跨域通信&quot;&gt;&lt;a href=&quot;#javascript跨域通信&quot; class=&quot;headerlink&quot; title=&quot;javascript跨域通信&quot;&gt;&lt;/a&gt;javascript跨域通信&lt;/h3&gt;&lt;p&gt;同源：两个文档同源需满足&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;协议相同&lt;/li&gt;
&lt;li&gt;域名相同&lt;/li&gt;
&lt;li&gt;端口相同&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;跨域通信：js进行DOM操作、通信时如果目标与当前窗口不满足同源条件，浏览器为了安全会阻止跨域操作。跨域通信通常有以下方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果是log之类的简单&lt;strong&gt;单项通信&lt;/strong&gt;，新建&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;元素，通过src，href属性设置为目标url。实现跨域请求&lt;/li&gt;
&lt;li&gt;如果请求&lt;strong&gt;json数据&lt;/strong&gt;，使用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;进行jsonp请求&lt;/li&gt;
&lt;li&gt;现代浏览器中&lt;strong&gt;多窗口通信&lt;/strong&gt;使用HTML5规范的targetWindow.postMessage(data, origin);其中data是需要发送的对象，origin是目标窗口的origin。window.addEventListener(‘message’, handler, false);handler的event.data是postMessage发送来的数据，event.origin是发送窗口的origin，event.source是发送消息的窗口引用&lt;/li&gt;
&lt;li&gt;内部服务器代理请求跨域url，然后返回数据&lt;/li&gt;
&lt;li&gt;跨域请求数据，现代浏览器可使用HTML5规范的CORS功能，只要目标服务器返回HTTP头部&lt;strong&gt;&lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt;&lt;/strong&gt;即可像普通ajax一样访问跨域资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;javascript有哪几种数据类型&quot;&gt;&lt;a href=&quot;#javascript有哪几种数据类型&quot; class=&quot;headerlink&quot; title=&quot;javascript有哪几种数据类型&quot;&gt;&lt;/a&gt;javascript有哪几种数据类型&lt;/h3&gt;&lt;p&gt;六种基本数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;undefined&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;symbol&lt;/a&gt;(ES6)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一种引用类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Object&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;什么闭包-闭包有什么用&quot;&gt;&lt;a href=&quot;#什么闭包-闭包有什么用&quot; class=&quot;headerlink&quot; title=&quot;什么闭包,闭包有什么用&quot;&gt;&lt;/a&gt;什么闭包,闭包有什么用&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;闭包是在某个作用域内定义的函数，它可以访问这个作用域内的所有变量&lt;/strong&gt;。闭包作用域链通常包括三个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;函数本身作用域。&lt;/li&gt;
&lt;li&gt;闭包定义时的作用域。&lt;/li&gt;
&lt;li&gt;全局作用域。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;闭包常见用途：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建特权方法用于访问控制&lt;/li&gt;
&lt;li&gt;事件处理程序及回调&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;javascript有哪几种方法定义函数&quot;&gt;&lt;a href=&quot;#javascript有哪几种方法定义函数&quot; class=&quot;headerlink&quot; title=&quot;javascript有哪几种方法定义函数&quot;&gt;&lt;/a&gt;javascript有哪几种方法定义函数&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;函数声明表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;function操作符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Function 构造函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/arrow_functions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ES6:arrow function&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重要参考资料：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN:Functions_and_function_scope&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;应用程序存储和离线web应用&quot;&gt;&lt;a href=&quot;#应用程序存储和离线web应用&quot; class=&quot;headerlink&quot; title=&quot;应用程序存储和离线web应用&quot;&gt;&lt;/a&gt;应用程序存储和离线web应用&lt;/h3&gt;&lt;p&gt;HTML5新增应用程序缓存，允许web应用将应用程序自身保存到用户浏览器中，用户离线状态也能访问。&lt;br&gt;1.为html元素设置manifest属性:&lt;code&gt;&amp;lt;html manifest=&amp;quot;myapp.appcache&amp;quot;&amp;gt;&lt;/code&gt;，其中后缀名只是一个约定，真正识别方式是通过&lt;code&gt;text/cache-manifest&lt;/code&gt;作为MIME类型。所以需要配置服务器保证设置正确&lt;br&gt;2.manifest文件首行为&lt;code&gt;CACHE MANIFEST&lt;/code&gt;，其余就是要缓存的URL列表，每个一行，相对路径都相对于manifest文件的url。注释以#开头&lt;br&gt;3.url分为三种类型：&lt;code&gt;CACHE&lt;/code&gt;:为默认类型。&lt;code&gt;NETWORK&lt;/code&gt;：表示资源从不缓存。 &lt;code&gt;FALLBACK&lt;/code&gt;:每行包含两个url，第二个URL是指需要加载和存储在缓存中的资源， 第一个URL是一个前缀。任何匹配该前缀的URL都不会缓存，如果从网络中载入这样的URL失败的话，就会用第二个URL指定的缓存资源来替代。以下是一个文件例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CACHE MANIFEST&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CACHE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myapp.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myapp.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myapp.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FALLBACK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;videos/ offline_help.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NETWORK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cgi/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;客户端存储localStorage和sessionStorage&quot;&gt;&lt;a href=&quot;#客户端存储localStorage和sessionStorage&quot; class=&quot;headerlink&quot; title=&quot;客户端存储localStorage和sessionStorage&quot;&gt;&lt;/a&gt;客户端存储localStorage和sessionStorage&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;localStorage有效期为永久，sessionStorage有效期为顶层窗口关闭前&lt;/li&gt;
&lt;li&gt;同源文档可以读取并修改localStorage数据，sessionStorage只允许同一个窗口下的文档访问，如通过iframe引入的同源文档。&lt;/li&gt;
&lt;li&gt;Storage对象通常被当做普通javascript对象使用：&lt;strong&gt;通过设置属性来存取字符串值&lt;/strong&gt;，也可以通过&lt;strong&gt;setItem(key, value)设置&lt;/strong&gt;，&lt;strong&gt;getItem(key)读取&lt;/strong&gt;，&lt;strong&gt;removeItem(key)删除&lt;/strong&gt;，&lt;strong&gt;clear()删除所有数据&lt;/strong&gt;，&lt;strong&gt;length表示已存储的数据项数目&lt;/strong&gt;，&lt;strong&gt;key(index)返回对应索引的key&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;localStorage.setItem(&amp;apos;x&amp;apos;, 1); // storge x-&amp;gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.getItem(&amp;apos;x); // return value of x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 枚举所有存储的键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 0, len = localStorage.length; i &amp;lt; len; ++i ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name = localStorage.key(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var value = localStorage.getItem(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.removeItem(&amp;apos;x&amp;apos;); // remove x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.clear();  // remove all data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cookie及其操作&quot;&gt;&lt;a href=&quot;#cookie及其操作&quot; class=&quot;headerlink&quot; title=&quot;cookie及其操作&quot;&gt;&lt;/a&gt;cookie及其操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;cookie是web浏览器存储的少量数据，最早设计为服务器端使用，作为HTTP协议的扩展实现。cookie数据会自动在浏览器和服务器之间传输。&lt;/li&gt;
&lt;li&gt;通过读写cookie检测是否支持&lt;/li&gt;
&lt;li&gt;cookie属性有&lt;strong&gt;名&lt;/strong&gt;，&lt;strong&gt;值&lt;/strong&gt;，&lt;strong&gt;max-age&lt;/strong&gt;，&lt;strong&gt;path&lt;/strong&gt;, &lt;strong&gt;domain&lt;/strong&gt;，&lt;strong&gt;secure&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;cookie默认有效期为浏览器会话，一旦用户关闭浏览器，数据就丢失，通过设置&lt;strong&gt;max-age=seconds&lt;/strong&gt;属性告诉浏览器cookie有效期&lt;/li&gt;
&lt;li&gt;cookie作用域通过&lt;strong&gt;文档源&lt;/strong&gt;和&lt;strong&gt;文档路径&lt;/strong&gt;来确定，通过&lt;strong&gt;path&lt;/strong&gt;和&lt;strong&gt;domain&lt;/strong&gt;进行配置，web页面同目录或子目录文档都可访问&lt;/li&gt;
&lt;li&gt;通过cookie保存数据的方法为：为document.cookie设置一个符合目标的字符串如下&lt;/li&gt;
&lt;li&gt;读取document.cookie获得’; ‘分隔的字符串，key=value,解析得到结果&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;document.cookie = &amp;apos;name=qiu; max-age=9999; path=/; domain=domain; secure&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.cookie = &amp;apos;name=aaa; path=/; domain=domain; secure&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 要改变cookie的值，需要使用相同的名字、路径和域，新的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 来设置cookie，同样的方法可以用来改变有效期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置max-age为0可以删除指定cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//读取cookie，访问document.cookie返回键值对组成的字符串，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//不同键值对之间用&amp;apos;; &amp;apos;分隔。通过解析获得需要的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/qiu-deqing/google/blob/master/module/js/cookieUtil.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cookieUtil.js&lt;/a&gt;：自己写的cookie操作工具&lt;/p&gt;
&lt;h3 id=&quot;javascript有哪些方法定义对象&quot;&gt;&lt;a href=&quot;#javascript有哪些方法定义对象&quot; class=&quot;headerlink&quot; title=&quot;javascript有哪些方法定义对象&quot;&gt;&lt;/a&gt;javascript有哪些方法定义对象&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;对象字面量： &lt;code&gt;var obj = {};&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;构造函数： &lt;code&gt;var obj = new Object();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Object.create(): &lt;code&gt;var obj = Object.create(Object.prototype);&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;运算符判断相等的流程是怎样的&quot;&gt;&lt;a href=&quot;#运算符判断相等的流程是怎样的&quot; class=&quot;headerlink&quot; title=&quot;===运算符判断相等的流程是怎样的&quot;&gt;&lt;/a&gt;===运算符判断相等的流程是怎样的&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果两个值不是相同类型，它们不相等&lt;/li&gt;
&lt;li&gt;如果两个值都是null或者都是undefined，它们相等&lt;/li&gt;
&lt;li&gt;如果两个值都是布尔类型true或者都是false，它们相等&lt;/li&gt;
&lt;li&gt;如果其中有一个是&lt;strong&gt;NaN&lt;/strong&gt;，它们不相等&lt;/li&gt;
&lt;li&gt;如果都是数值型并且数值相等，他们相等， -0等于0&lt;/li&gt;
&lt;li&gt;如果他们都是字符串并且在相同位置包含相同的16位值，他它们相等；如果在长度或者内容上不等，它们不相等；两个字符串显示结果相同但是编码不同==和===都认为他们不相等&lt;/li&gt;
&lt;li&gt;如果他们指向相同对象、数组、函数，它们相等；如果指向不同对象，他们不相等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;运算符判断相等的流程是怎样的-1&quot;&gt;&lt;a href=&quot;#运算符判断相等的流程是怎样的-1&quot; class=&quot;headerlink&quot; title=&quot;==运算符判断相等的流程是怎样的&quot;&gt;&lt;/a&gt;==运算符判断相等的流程是怎样的&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果两个值类型相同，按照===比较方法进行比较&lt;/li&gt;
&lt;li&gt;如果类型不同，使用如下规则进行比较&lt;ol&gt;
&lt;li&gt;如果其中一个值是null，另一个是undefined，它们相等&lt;/li&gt;
&lt;li&gt;如果一个值是&lt;strong&gt;数字&lt;/strong&gt;另一个是&lt;strong&gt;字符串&lt;/strong&gt;，将&lt;strong&gt;字符串转换为数字&lt;/strong&gt;进行比较&lt;/li&gt;
&lt;li&gt;如果有布尔类型，将&lt;strong&gt;true转换为1，false转换为0&lt;/strong&gt;，然后用==规则继续比较&lt;/li&gt;
&lt;li&gt;如果一个值是对象，另一个是数字或字符串，将对象转换为原始值然后用==规则继续比较&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他所有情况都认为不相等&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;对象到字符串的转换步骤&quot;&gt;&lt;a href=&quot;#对象到字符串的转换步骤&quot; class=&quot;headerlink&quot; title=&quot;对象到字符串的转换步骤&quot;&gt;&lt;/a&gt;对象到字符串的转换步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果对象有toString()方法，javascript调用它。如果返回一个原始值（primitive value如：string number boolean）,将这个值转换为字符串作为结果&lt;/li&gt;
&lt;li&gt;如果对象没有toString()方法或者返回值不是原始值，javascript寻找对象的valueOf()方法，如果存在就调用它，返回结果是原始值则转为字符串作为结果&lt;/li&gt;
&lt;li&gt;否则，javascript不能从toString()或者valueOf()获得一个原始值，此时throws a TypeError&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;对象到数字的转换步骤&quot;&gt;&lt;a href=&quot;#对象到数字的转换步骤&quot; class=&quot;headerlink&quot; title=&quot;对象到数字的转换步骤&quot;&gt;&lt;/a&gt;对象到数字的转换步骤&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1. 如果对象有valueOf()方法并且返回元素值，javascript将返回值转换为数字作为结果
2. 否则，如果对象有toString()并且返回原始值，javascript将返回结果转换为数字作为结果
3. 否则，throws a TypeError
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;lt-gt-lt-gt-的比较规则&quot;&gt;&lt;a href=&quot;#lt-gt-lt-gt-的比较规则&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;,&amp;gt;,&amp;lt;=,&amp;gt;=的比较规则&quot;&gt;&lt;/a&gt;&amp;lt;,&amp;gt;,&amp;lt;=,&amp;gt;=的比较规则&lt;/h3&gt;&lt;p&gt;所有比较运算符都支持任意类型，但是&lt;strong&gt;比较只支持数字和字符串&lt;/strong&gt;，所以需要执行必要的转换然后进行比较，转换规则如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果操作数是对象，转换为原始值：如果valueOf方法返回原始值，则使用这个值，否则使用toString方法的结果，如果转换失败则报错&lt;/li&gt;
&lt;li&gt;经过必要的对象到原始值的转换后，如果两个操作数都是字符串，按照字母顺序进行比较（他们的16位unicode值的大小）&lt;/li&gt;
&lt;li&gt;否则，如果有一个操作数不是字符串，&lt;strong&gt;将两个操作数转换为数字&lt;/strong&gt;进行比较&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;运算符工作流程&quot;&gt;&lt;a href=&quot;#运算符工作流程&quot; class=&quot;headerlink&quot; title=&quot;+运算符工作流程&quot;&gt;&lt;/a&gt;+运算符工作流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果有操作数是对象，转换为原始值&lt;/li&gt;
&lt;li&gt;此时如果有&lt;strong&gt;一个操作数是字符串&lt;/strong&gt;，其他的操作数都转换为字符串并执行连接&lt;/li&gt;
&lt;li&gt;否则：&lt;strong&gt;所有操作数都转换为数字并执行加法&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;函数内部arguments变量有哪些特性-有哪些属性-如何将它转换为数组&quot;&gt;&lt;a href=&quot;#函数内部arguments变量有哪些特性-有哪些属性-如何将它转换为数组&quot; class=&quot;headerlink&quot; title=&quot;函数内部arguments变量有哪些特性,有哪些属性,如何将它转换为数组&quot;&gt;&lt;/a&gt;函数内部arguments变量有哪些特性,有哪些属性,如何将它转换为数组&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;arguments所有函数中都包含的一个局部变量，是一个类数组对象，对应函数调用时的实参。如果函数定义同名参数会在调用时覆盖默认对象&lt;/li&gt;
&lt;li&gt;arguments[index]分别对应函数调用时的实参，并且通过arguments修改实参时会同时修改实参&lt;/li&gt;
&lt;li&gt;arguments.length为实参的个数（Function.length表示形参长度）&lt;/li&gt;
&lt;li&gt;arguments.callee为当前正在执行的函数本身，使用这个属性进行递归调用时需注意this的变化&lt;/li&gt;
&lt;li&gt;arguments.caller为调用当前函数的函数（已被遗弃）&lt;/li&gt;
&lt;li&gt;转换为数组：&lt;code&gt;var args = Array.prototype.slice.call(arguments, 0);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DOM事件模型是如何的-编写一个EventUtil工具类实现事件管理兼容&quot;&gt;&lt;a href=&quot;#DOM事件模型是如何的-编写一个EventUtil工具类实现事件管理兼容&quot; class=&quot;headerlink&quot; title=&quot;DOM事件模型是如何的,编写一个EventUtil工具类实现事件管理兼容&quot;&gt;&lt;/a&gt;DOM事件模型是如何的,编写一个EventUtil工具类实现事件管理兼容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DOM事件包含捕获（capture）和冒泡（bubble）两个阶段：捕获阶段事件从window开始触发事件然后通过祖先节点一次传递到触发事件的DOM元素上；冒泡阶段事件从初始元素依次向祖先节点传递直到window&lt;/li&gt;
&lt;li&gt;标准事件监听elem.addEventListener(type, handler, capture)/elem.removeEventListener(type, handler, capture)：handler接收保存事件信息的event对象作为参数，event.target为触发事件的对象，handler调用上下文this为绑定监听器的对象，event.preventDefault()取消事件默认行为，event.stopPropagation()/event.stopImmediatePropagation()取消事件传递&lt;/li&gt;
&lt;li&gt;老版本IE事件监听elem.attachEvent(‘on’+type, handler)/elem.detachEvent(‘on’+type, handler)：handler不接收event作为参数，事件信息保存在window.event中，触发事件的对象为event.srcElement，handler执行上下文this为window使用闭包中调用handler.call(elem, event)可模仿标准模型，然后返回闭包，保证了监听器的移除。event.returnValue为false时取消事件默认行为，event.cancleBubble为true时取消时间传播&lt;/li&gt;
&lt;li&gt;通常利用事件冒泡机制托管事件处理程序提高程序性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 跨浏览器事件处理工具。只支持冒泡。不支持捕获&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author  (qiu_deqing@126.com)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var EventUtil = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getEvent: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return event || window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getTarget: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return event.target || event.srcElement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 返回注册成功的监听器，IE中需要使用返回值来移除监听器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    on: function (elem, type, handler) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (elem.addEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.addEventListener(type, handler, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (elem.attachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var wrapper = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              var event = window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              event.target = event.srcElement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              handler.call(elem, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.attachEvent(&amp;apos;on&amp;apos; + type, wrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return wrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    off: function (elem, type, handler) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (elem.removeEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.removeEventListener(type, handler, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (elem.detachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.detachEvent(&amp;apos;on&amp;apos; + type, handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    preventDefault: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (event.preventDefault) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (&amp;apos;returnValue&amp;apos; in event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.returnValue = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stopPropagation: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (event.stopPropagation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.stopPropagation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (&amp;apos;cancelBubble&amp;apos; in event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.cancelBubble = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * keypress事件跨浏览器获取输入字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 某些浏览器在一些特殊键上也触发keypress，此时返回null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     **/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     getChar: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (event.which == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return String.fromCharCode(event.keyCode);  // IE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else if (event.which != 0 &amp;amp;&amp;amp; event.charCode != 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return String.fromCharCode(event.which);    // the rest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return null;    // special key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;评价一下三种方法实现继承的优缺点-并改进&quot;&gt;&lt;a href=&quot;#评价一下三种方法实现继承的优缺点-并改进&quot; class=&quot;headerlink&quot; title=&quot;评价一下三种方法实现继承的优缺点,并改进&quot;&gt;&lt;/a&gt;评价一下三种方法实现继承的优缺点,并改进&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Shape() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function Rect() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 方法1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rect.prototype = new Shape();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 方法2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rect.prototype = Shape.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 方法3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rect.prototype = Object.create(Shape.prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rect.prototype.area = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // do something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法1：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：正确设置原型链实现继承&lt;/li&gt;
&lt;li&gt;优点：父类实例属性得到继承，原型链查找效率提高，也能为一些属性提供合理的默认值&lt;/li&gt;
&lt;li&gt;缺点：父类实例属性为引用类型时，不恰当地修改会导致所有子类被修改&lt;/li&gt;
&lt;li&gt;缺点：创建父类实例作为子类原型时，可能无法确定构造函数需要的合理参数，这样提供的参数继承给子类没有实际意义，当子类需要这些参数时应该在构造函数中进行初始化和设置&lt;/li&gt;
&lt;li&gt;总结：继承应该是继承方法而不是属性，为子类设置父类实例属性应该是通过在子类构造函数中调用父类构造函数进行初始化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法2：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：正确设置原型链实现继承&lt;/li&gt;
&lt;li&gt;缺点：父类构造函数原型与子类相同。修改子类原型添加方法会修改父类&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法3：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：正确设置原型链且避免方法1.2中的缺点&lt;/li&gt;
&lt;li&gt;缺点：ES5方法需要注意兼容性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;改进：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有三种方法应该在子类构造函数中调用父类构造函数实现实例属性初始化&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Rect() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Shape.call(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;用新创建的对象替代子类默认原型，设置&lt;code&gt;Rect.prototype.constructor = Rect;&lt;/code&gt;保证一致性&lt;/li&gt;
&lt;li&gt;第三种方法的polyfill：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function create(obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (Object.create) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Object.create(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    function f() &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.prototype = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;javascript编程部分&quot;&gt;&lt;a href=&quot;#javascript编程部分&quot; class=&quot;headerlink&quot; title=&quot;$javascript编程部分&quot;&gt;&lt;/a&gt;$javascript编程部分&lt;/h2&gt;&lt;h3 id=&quot;请用原生js实现一个函数-给页面制定的任意一个元素添加一个透明遮罩-透明度可变-默认0-2-使这个区域点击无效-要求兼容IE8-及各主流浏览器-遮罩层效果如下图所示&quot;&gt;&lt;a href=&quot;#请用原生js实现一个函数-给页面制定的任意一个元素添加一个透明遮罩-透明度可变-默认0-2-使这个区域点击无效-要求兼容IE8-及各主流浏览器-遮罩层效果如下图所示&quot; class=&quot;headerlink&quot; title=&quot;请用原生js实现一个函数,给页面制定的任意一个元素添加一个透明遮罩(透明度可变,默认0.2),使这个区域点击无效,要求兼容IE8+及各主流浏览器,遮罩层效果如下图所示:&quot;&gt;&lt;/a&gt;请用原生js实现一个函数,给页面制定的任意一个元素添加一个透明遮罩(透明度可变,默认0.2),使这个区域点击无效,要求兼容IE8+及各主流浏览器,遮罩层效果如下图所示:&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xsspr.com2.z0.glb.clouddn.com/element-mask.jpg&quot; alt=&quot;遮罩效果&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#target &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 300px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    margin: 40px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background-color: tomato;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;target&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function addMask(elem, opacity) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opacity = opacity || 0.2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var rect = elem.getBoundingClientRect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var style = getComputedStyle(elem, null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var mask = document.createElement(&amp;apos;div&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.position = &amp;apos;absolute&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var marginLeft = parseFloat(style.marginLeft);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.left = (elem.offsetLeft - marginLeft) + &amp;apos;px&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var marginTop = parseFloat(style.marginTop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.top = (elem.offsetTop - marginTop) + &amp;apos;px&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.zIndex = 9999;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.opacity = &amp;apos;&amp;apos; + opacity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.backgroundColor = &amp;apos;#000&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.width = (parseFloat(style.marginLeft) +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parseFloat(style.marginRight) + rect.width) + &amp;apos;px&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mask.style.height = (parseFloat(style.marginTop) +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parseFloat(style.marginBottom) + rect.height) + &amp;apos;px&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elem.parentNode.appendChild(mask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var target = document.getElementById(&amp;apos;target&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addMask(target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target.addEventListener(&amp;apos;click&amp;apos;, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;click&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;请用代码写出-今天是星期x-其中x表示当天是星期几-如果当天是星期一-输出应该是”今天是星期一”&quot;&gt;&lt;a href=&quot;#请用代码写出-今天是星期x-其中x表示当天是星期几-如果当天是星期一-输出应该是”今天是星期一”&quot; class=&quot;headerlink&quot; title=&quot;请用代码写出(今天是星期x)其中x表示当天是星期几,如果当天是星期一,输出应该是”今天是星期一”&quot;&gt;&lt;/a&gt;请用代码写出(今天是星期x)其中x表示当天是星期几,如果当天是星期一,输出应该是”今天是星期一”&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var days = [&amp;apos;日&amp;apos;,&amp;apos;一&amp;apos;,&amp;apos;二&amp;apos;,&amp;apos;三&amp;apos;,&amp;apos;四&amp;apos;,&amp;apos;五&amp;apos;,&amp;apos;六&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var date = new Date();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(&amp;apos;今天是星期&amp;apos; + days[date.getDay()]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;下面这段代码想要循环延时输出结果0-1-2-3-4-请问输出结果是否正确-如果不正确-请说明为什么-并修改循环内的代码使其输出正确结果&quot;&gt;&lt;a href=&quot;#下面这段代码想要循环延时输出结果0-1-2-3-4-请问输出结果是否正确-如果不正确-请说明为什么-并修改循环内的代码使其输出正确结果&quot; class=&quot;headerlink&quot; title=&quot;下面这段代码想要循环延时输出结果0 1 2 3 4,请问输出结果是否正确,如果不正确,请说明为什么,并修改循环内的代码使其输出正确结果&quot;&gt;&lt;/a&gt;下面这段代码想要循环延时输出结果0 1 2 3 4,请问输出结果是否正确,如果不正确,请说明为什么,并修改循环内的代码使其输出正确结果&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 0; i &amp;lt; 5; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTimeout(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(i + &amp;apos; &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不能输出正确结果，因为循环中setTimeout接受的参数函数通过闭包访问变量i。javascript运行环境为单线程，setTimeout注册的函数需要等待线程空闲才能执行，此时for循环已经结束，i值为5.五个定时输出都是5&lt;br&gt;修改方法：将setTimeout放在函数立即调用表达式中，将i值作为参数传递给包裹函数，创建新闭包&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 0; i &amp;lt; 5; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (function (i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(i + &amp;apos; &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;现有一个Page类-其原型对象上有许多以post开头的方法-如postMsg-另有一拦截函数chekc-只返回ture或false-请设计一个函数-该函数应批量改造原Page的postXXX方法-在保留其原有功能的同时-为每个postXXX方法增加拦截验证功能-当chekc返回true时继续执行原postXXX方法-返回false时不再执行原postXXX方法&quot;&gt;&lt;a href=&quot;#现有一个Page类-其原型对象上有许多以post开头的方法-如postMsg-另有一拦截函数chekc-只返回ture或false-请设计一个函数-该函数应批量改造原Page的postXXX方法-在保留其原有功能的同时-为每个postXXX方法增加拦截验证功能-当chekc返回true时继续执行原postXXX方法-返回false时不再执行原postXXX方法&quot; class=&quot;headerlink&quot; title=&quot;现有一个Page类,其原型对象上有许多以post开头的方法(如postMsg);另有一拦截函数chekc,只返回ture或false.请设计一个函数,该函数应批量改造原Page的postXXX方法,在保留其原有功能的同时,为每个postXXX方法增加拦截验证功能,当chekc返回true时继续执行原postXXX方法,返回false时不再执行原postXXX方法&quot;&gt;&lt;/a&gt;现有一个Page类,其原型对象上有许多以post开头的方法(如postMsg);另有一拦截函数chekc,只返回ture或false.请设计一个函数,该函数应批量改造原Page的postXXX方法,在保留其原有功能的同时,为每个postXXX方法增加拦截验证功能,当chekc返回true时继续执行原postXXX方法,返回false时不再执行原postXXX方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Page() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Page.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  constructor: Page,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  postA: function (a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;a:&amp;apos; + a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  postB: function (b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;b:&amp;apos; + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  postC: function (c) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;c:&amp;apos; + c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  check: function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return Math.random() &amp;gt; 0.5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function checkfy(obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  for (var key in obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (key.indexOf(&amp;apos;post&amp;apos;) === 0 &amp;amp;&amp;amp; typeof obj[key] === &amp;apos;function&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (function (key) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var fn = obj[key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj[key] = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          if (obj.check()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fn.apply(obj, arguments);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;(key));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; // end checkfy()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkfy(Page.prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var obj = new Page();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.postA(&amp;apos;checkfy&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.postB(&amp;apos;checkfy&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.postC(&amp;apos;checkfy&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;完成下面的tool-tip&quot;&gt;&lt;a href=&quot;#完成下面的tool-tip&quot; class=&quot;headerlink&quot; title=&quot;完成下面的tool-tip&quot;&gt;&lt;/a&gt;完成下面的tool-tip&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xsspr.com2.z0.glb.clouddn.com/tip-box.jpg&quot; alt=&quot;xxx&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;编写javascript深度克隆函数deepClone&quot;&gt;&lt;a href=&quot;#编写javascript深度克隆函数deepClone&quot; class=&quot;headerlink&quot; title=&quot;编写javascript深度克隆函数deepClone&quot;&gt;&lt;/a&gt;编写javascript深度克隆函数deepClone&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;function deepClone(obj) {
    var _toString = Object.prototype.toString;

    // null, undefined, non-object, function
    if (!obj || typeof obj !== &amp;apos;object&amp;apos;) {
        return obj;
    }

    // DOM Node
    if (obj.nodeType &amp;amp;&amp;amp; &amp;apos;cloneNode&amp;apos; in obj) {
        return obj.cloneNode(true);
    }

    // Date
    if (_toString.call(obj) === &amp;apos;[object Date]&amp;apos;) {
        return new Date(obj.getTime());
    }

    // RegExp
    if (_toString.call(obj) === &amp;apos;[object RegExp]&amp;apos;) {
        var flags = [];
        if (obj.global) { flags.push(&amp;apos;g&amp;apos;); }
        if (obj.multiline) { flags.push(&amp;apos;m&amp;apos;); }
        if (obj.ignoreCase) { flags.push(&amp;apos;i&amp;apos;); }

        return new RegExp(obj.source, flags.join(&amp;apos;&amp;apos;));
    }

    var result = Array.isArray(obj) ? [] :
        obj.constructor ? new obj.constructor() : {};

    for (var key in obj ) {
        result[key] = deepClone(obj[key]);
    }

    return result;
}

function A() {
    this.a = a;
}

var a = {
    name: &amp;apos;qiu&amp;apos;,
    birth: new Date(),
    pattern: /qiu/gim,
    container: document.body,
    hobbys: [&amp;apos;book&amp;apos;, new Date(), /aaa/gim, 111]
};

var c = new A();
var b = deepClone(c);
console.log(c.a === b.a);
console.log(c, b);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;补充代码-鼠标单击Button1后将Button1移动到Button2的后面&quot;&gt;&lt;a href=&quot;#补充代码-鼠标单击Button1后将Button1移动到Button2的后面&quot; class=&quot;headerlink&quot; title=&quot;补充代码,鼠标单击Button1后将Button1移动到Button2的后面&quot;&gt;&lt;/a&gt;补充代码,鼠标单击Button1后将Button1移动到Button2的后面&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;TEst&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div&amp;gt;
   &amp;lt;input type=&amp;quot;button&amp;quot; id =&amp;quot;button1&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;
   &amp;lt;input type=&amp;quot;button&amp;quot; id =&amp;quot;button2&amp;quot; value=&amp;quot;2&amp;quot; /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var btn1 = document.getElementById(&amp;apos;button1&amp;apos;);
    var btn2 = document.getElementById(&amp;apos;button2&amp;apos;);

    addListener(btn1, &amp;apos;click&amp;apos;, function (event) {
        btn1.parentNode.insertBefore(btn2, btn1);
    });

    function addListener(elem, type, handler) {
        if (elem.addEventListener) {
            elem.addEventListener(type, handler, false);
            return handler;
        } else if (elem.attachEvent) {
            function wrapper() {
                var event = window.event;
                event.target = event.srcElement;
                handler.call(elem, event);
            }
            elem.attachEvent(&amp;apos;on&amp;apos; + type, wrapper);
            return wrapper;
        }
    }

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;网页中实现一个计算当年还剩多少时间的倒数计时程序-要求网页上实时动态显示”××年还剩××天××时××分××秒”&quot;&gt;&lt;a href=&quot;#网页中实现一个计算当年还剩多少时间的倒数计时程序-要求网页上实时动态显示”××年还剩××天××时××分××秒”&quot; class=&quot;headerlink&quot; title=&quot;网页中实现一个计算当年还剩多少时间的倒数计时程序,要求网页上实时动态显示”××年还剩××天××时××分××秒”&quot;&gt;&lt;/a&gt;网页中实现一个计算当年还剩多少时间的倒数计时程序,要求网页上实时动态显示”××年还剩××天××时××分××秒”&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;TEst&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

    &amp;lt;span id=&amp;quot;target&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;


&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    // 为了简化。每月默认30天
    function getTimeString() {
        var start = new Date();
        var end = new Date(start.getFullYear() + 1, 0, 1);
        var elapse = Math.floor((end - start) / 1000);

        var seconds = elapse % 60 ;
        var minutes = Math.floor(elapse / 60) % 60;
        var hours = Math.floor(elapse / (60 * 60)) % 24;
        var days = Math.floor(elapse / (60 * 60 * 24)) % 30;
        var months = Math.floor(elapse / (60 * 60 * 24 * 30)) % 12;
        var years = Math.floor(elapse / (60 * 60 * 24 * 30 * 12));

        return start.getFullYear() + &amp;apos;年还剩&amp;apos; + years + &amp;apos;年&amp;apos; + months + &amp;apos;月&amp;apos; + days + &amp;apos;日&amp;apos;
            + hours + &amp;apos;小时&amp;apos; + minutes + &amp;apos;分&amp;apos; + seconds + &amp;apos;秒&amp;apos;;
    }

    function domText(elem, text) {
        if (text == undefined) {

            if (elem.textContent) {
                return elem.textContent;
            } else if (elem.innerText) {
                return elem.innerText;
            }
        } else {
            if (elem.textContent) {
                elem.textContent = text;
            } else if (elem.innerText) {
                elem.innerText = text;
            } else {
                elem.innerHTML = text;
            }
        }
    }

    var target = document.getElementById(&amp;apos;target&amp;apos;);

    setInterval(function () {
        domText(target, getTimeString());
    }, 1000)
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;完成一个函数-接受数组作为参数-数组元素为整数或者数组-数组元素包含整数或数组-函数返回扁平化后的数组&quot;&gt;&lt;a href=&quot;#完成一个函数-接受数组作为参数-数组元素为整数或者数组-数组元素包含整数或数组-函数返回扁平化后的数组&quot; class=&quot;headerlink&quot; title=&quot;完成一个函数,接受数组作为参数,数组元素为整数或者数组,数组元素包含整数或数组,函数返回扁平化后的数组&quot;&gt;&lt;/a&gt;完成一个函数,接受数组作为参数,数组元素为整数或者数组,数组元素包含整数或数组,函数返回扁平化后的数组&lt;/h3&gt;&lt;p&gt;如：[1, [2, [ [3, 4], 5], 6]] =&amp;gt; [1, 2, 3, 4, 5, 6]&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var data =  [1, [2, [ [3, 4], 5], 6]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function flat(data, result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i, d, len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = 0, len = data.length; i &amp;lt; len; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        d = data[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (typeof d === &amp;apos;number&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.push(d);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flat(d, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var result = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flat(data, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(result);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何判断一个对象是否为数组&quot;&gt;&lt;a href=&quot;#如何判断一个对象是否为数组&quot; class=&quot;headerlink&quot; title=&quot;如何判断一个对象是否为数组&quot;&gt;&lt;/a&gt;如何判断一个对象是否为数组&lt;/h3&gt;&lt;p&gt;如果浏览器支持Array.isArray()可以直接判断否则需进行必要判断&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判断一个对象是否是数组，参数不是对象或者不是数组，返回false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param &amp;#123;Object&amp;#125; arg 需要测试是否为数组的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return &amp;#123;Boolean&amp;#125; 传入参数是数组返回true，否则返回false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function isArray(arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (typeof arg === &amp;apos;object&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Object.prototype.toString.call(arg) === &amp;apos;[object Array]&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;请评价以下事件监听器代码并给出改进意见&quot;&gt;&lt;a href=&quot;#请评价以下事件监听器代码并给出改进意见&quot; class=&quot;headerlink&quot; title=&quot;请评价以下事件监听器代码并给出改进意见&quot;&gt;&lt;/a&gt;请评价以下事件监听器代码并给出改进意见&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (window.addEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var addListener = function (el, type, listener, useCapture) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    el.addEventListener(type, listener, useCapture);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else if (document.all) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  addListener = function (el, type, listener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    el.attachEvent(&amp;apos;on&amp;apos; + type, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      listener.apply(el);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作用：浏览器功能检测实现跨浏览器DOM事件绑定&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;测试代码只运行一次，根据浏览器确定绑定方法&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;listener.apply(el)&lt;/code&gt;解决IE下监听器this与标准不一致的地方&lt;/li&gt;
&lt;li&gt;在浏览器不支持的情况下提供简单的功能，在标准浏览器中提供捕获功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;document.all作为IE检测不可靠，应该使用if(el.attachEvent)&lt;/li&gt;
&lt;li&gt;addListener在不同浏览器下API不一样&lt;/li&gt;
&lt;li&gt;&lt;code&gt;listener.apply&lt;/code&gt;使this与标准一致但监听器无法移除&lt;/li&gt;
&lt;li&gt;未解决IE下listener参数event。 target问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;改进:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var addListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (window.addEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  addListener = function (el, type, listener, useCapture) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    el.addEventListener(type, listener, useCapture);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else if (window.attachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  addListener = function (el, type, listener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 标准化this，event，target&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var wrapper = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var event = window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      event.target = event.srcElement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      listener.call(el, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    el.attachEvent(&amp;apos;on&amp;apos; + type, wrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return wrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 返回wrapper。调用者可以保存，以后remove&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何判断一个对象是否为函数&quot;&gt;&lt;a href=&quot;#如何判断一个对象是否为函数&quot; class=&quot;headerlink&quot; title=&quot;如何判断一个对象是否为函数&quot;&gt;&lt;/a&gt;如何判断一个对象是否为函数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判断对象是否为函数，如果当前运行环境对可调用对象（如正则表达式）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 的typeof返回&amp;apos;function&amp;apos;，采用通用方法，否则采用优化方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param &amp;#123;Any&amp;#125; arg 需要检测是否为函数的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return &amp;#123;boolean&amp;#125; 如果参数是函数，返回true，否则false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function isFunction(arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (typeof (/./) !== &amp;apos;function&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return typeof arg === &amp;apos;function&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return Object.prototype.toString.call(arg) === &amp;apos;[object Function]&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; // end if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;编写一个函数接受url中query-string为参数-返回解析后的Object-query-string使用application-x-www-form-urlencoded编码&quot;&gt;&lt;a href=&quot;#编写一个函数接受url中query-string为参数-返回解析后的Object-query-string使用application-x-www-form-urlencoded编码&quot; class=&quot;headerlink&quot; title=&quot;编写一个函数接受url中query string为参数,返回解析后的Object,query string使用application/x-www-form-urlencoded编码&quot;&gt;&lt;/a&gt;编写一个函数接受url中query string为参数,返回解析后的Object,query string使用application/x-www-form-urlencoded编码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 解析query string转换为对象，一个key有多个值时生成数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param &amp;#123;String&amp;#125; query 需要解析的query字符串，开头可以是?，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 按照application/x-www-form-urlencoded编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return &amp;#123;Object&amp;#125; 参数解析后的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function parseQuery(query) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var result = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 如果不是字符串返回空对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (typeof query !== &amp;apos;string&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 去掉字符串开头可能带的?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (query.charAt(0) === &amp;apos;?&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = query.substring(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var pairs = query.split(&amp;apos;&amp;amp;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var pair;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var key, value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i, len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = 0, len = pairs.length; i &amp;lt; len; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pair = pairs[i].split(&amp;apos;=&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // application/x-www-form-urlencoded编码会将&amp;apos; &amp;apos;转换为+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key = decodeURIComponent(pair[0]).replace(/\+/g, &amp;apos; &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value = decodeURIComponent(pair[1]).replace(/\+/g, &amp;apos; &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 如果是新key，直接添加&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!(key in result)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[key] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 如果key已经出现一次以上，直接向数组添加value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else if (isArray(result[key])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[key].push(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // key第二次出现，将结果改为数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var arr = [result[key]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            arr.push(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[key] = arr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; // end if-else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; // end for&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function isArray(arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (arg &amp;amp;&amp;amp; typeof arg === &amp;apos;object&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Object.prototype.toString.call(arg) === &amp;apos;[object Array]&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(parseQuery(&amp;apos;sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;解析一个完整的url-返回Object包含域与window-location相同&quot;&gt;&lt;a href=&quot;#解析一个完整的url-返回Object包含域与window-location相同&quot; class=&quot;headerlink&quot; title=&quot;解析一个完整的url,返回Object包含域与window.location相同&quot;&gt;&lt;/a&gt;解析一个完整的url,返回Object包含域与window.location相同&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 解析一个url并生成window.location对象中包含的域&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * location:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      href: &amp;apos;包含完整的url&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      origin: &amp;apos;包含协议到pathname之前的内容&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      protocol: &amp;apos;url使用的协议，包含末尾的:&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      username: &amp;apos;用户名&amp;apos;, // 暂时不支持&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      password: &amp;apos;密码&amp;apos;,  // 暂时不支持&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      host: &amp;apos;完整主机名，包含:和端口&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      hostname: &amp;apos;主机名，不包含端口&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      port: &amp;apos;端口号&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      pathname: &amp;apos;服务器上访问资源的路径/开头&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      search: &amp;apos;query string，?开头&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *      hash: &amp;apos;#开头的fragment identifier&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param &amp;#123;string&amp;#125; url 需要解析的url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return &amp;#123;Object&amp;#125; 包含url信息的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function parseUrl(url) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var result = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var keys = [&amp;apos;href&amp;apos;, &amp;apos;origin&amp;apos;, &amp;apos;protocol&amp;apos;, &amp;apos;host&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;apos;hostname&amp;apos;, &amp;apos;port&amp;apos;, &amp;apos;pathname&amp;apos;, &amp;apos;search&amp;apos;, &amp;apos;hash&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i, len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var regexp = /(([^:]+:)\/\/(([^:\/\?#]+)(:\d+)?))(\/[^?#]*)?(\?[^#]*)?(#.*)?/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var match = regexp.exec(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (match) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (i = keys.length - 1; i &amp;gt;= 0; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[keys[i]] = match[i] ? match[i] : &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;完成函数getViewportSize返回指定窗口的视口尺寸&quot;&gt;&lt;a href=&quot;#完成函数getViewportSize返回指定窗口的视口尺寸&quot; class=&quot;headerlink&quot; title=&quot;完成函数getViewportSize返回指定窗口的视口尺寸&quot;&gt;&lt;/a&gt;完成函数getViewportSize返回指定窗口的视口尺寸&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 查询指定窗口的视口尺寸，如果不指定窗口，查询当前窗口尺寸&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function getViewportSize(w) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    w = w || window;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // IE9及标准浏览器中可使用此标准方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (&amp;apos;innerHeight&amp;apos; in w) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: w.innerWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: w.innerHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var d = w.document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // IE 8及以下浏览器在标准模式下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (document.compatMode === &amp;apos;CSS1Compat&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: d.documentElement.clientWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: d.documentElement.clientHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // IE8及以下浏览器在怪癖模式下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: d.body.clientWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: d.body.clientHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;完成函数getScrollOffset返回窗口滚动条偏移量&quot;&gt;&lt;a href=&quot;#完成函数getScrollOffset返回窗口滚动条偏移量&quot; class=&quot;headerlink&quot; title=&quot;完成函数getScrollOffset返回窗口滚动条偏移量&quot;&gt;&lt;/a&gt;完成函数getScrollOffset返回窗口滚动条偏移量&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;/**
 * 获取指定window中滚动条的偏移量，如未指定则获取当前window
 * 滚动条偏移量
 *
 * @param {window} w 需要获取滚动条偏移量的窗口
 * @return {Object} obj.x为水平滚动条偏移量,obj.y为竖直滚动条偏移量
 */
function getScrollOffset(w) {
    w =  w || window;
    // 如果是标准浏览器
    if (w.pageXOffset != null) {
        return {
            x: w.pageXOffset,
            y: w.pageYOffset
        };
    }

    // 老版本IE，根据兼容性不同访问不同元素
    var d = w.document;
    if (d.compatMode === &amp;apos;CSS1Compat&amp;apos;) {
        return {
            x: d.documentElement.scrollLeft,
            y: d.documentElement.scrollTop
        }
    }

    return {
        x: d.body.scrollLeft,
        y: d.body.scrollTop
    };
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;现有一个字符串richText-是一段富文本-需要显示在页面上-有个要求-需要给其中只包含一个img元素的p标签增加一个叫pic的class-请编写代码实现-可以使用jQuery或KISSY&quot;&gt;&lt;a href=&quot;#现有一个字符串richText-是一段富文本-需要显示在页面上-有个要求-需要给其中只包含一个img元素的p标签增加一个叫pic的class-请编写代码实现-可以使用jQuery或KISSY&quot; class=&quot;headerlink&quot; title=&quot;现有一个字符串richText,是一段富文本,需要显示在页面上.有个要求,需要给其中只包含一个img元素的p标签增加一个叫pic的class.请编写代码实现.可以使用jQuery或KISSY.&quot;&gt;&lt;/a&gt;现有一个字符串richText,是一段富文本,需要显示在页面上.有个要求,需要给其中只包含一个img元素的p标签增加一个叫pic的class.请编写代码实现.可以使用jQuery或KISSY.&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;function richText(text) {
    var div = document.createElement(&amp;apos;div&amp;apos;);
    div.innerHTML = text;
    var p = div.getElementsByTagName(&amp;apos;p&amp;apos;);
    var i, len;

    for (i = 0, len = p.length; i &amp;lt; len; ++i) {
        if (p[i].getElementsByTagName(&amp;apos;img&amp;apos;).length === 1) {
            p[i].classList.add(&amp;apos;pic&amp;apos;);
        }
    }

    return div.innerHTML;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;请实现一个Event类-继承自此类的对象都会拥有两个方法on-off-once和trigger&quot;&gt;&lt;a href=&quot;#请实现一个Event类-继承自此类的对象都会拥有两个方法on-off-once和trigger&quot; class=&quot;headerlink&quot; title=&quot;请实现一个Event类,继承自此类的对象都会拥有两个方法on,off,once和trigger&quot;&gt;&lt;/a&gt;请实现一个Event类,继承自此类的对象都会拥有两个方法on,off,once和trigger&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;function Event() {
    if (!(this instanceof Event)) {
        return new Event();
    }
    this._callbacks = {};
}
Event.prototype.on = function (type, handler) {
    this_callbacks = this._callbacks || {};
    this._callbacks[type] = this.callbacks[type] || [];
    this._callbacks[type].push(handler);

    return this;
};

Event.prototype.off = function (type, handler) {
    var list = this._callbacks[type];

    if (list) {
        for (var i = list.length; i &amp;gt;= 0; --i) {
            if (list[i] === handler) {
                list.splice(i, 1);
            }
        }
    }

    return this;
};

Event.prototype.trigger = function (type, data) {
    var list = this._callbacks[type];

    if (list) {
        for (var i = 0, len = list.length; i &amp;lt; len; ++i) {
            list[i].call(this, data);
        }
    }
};

Event.prototype.once = function (type, handler) {
    var self = this;

    function wrapper() {
        handler.apply(self, arguments);
        self.off(type, wrapper);
    }
    this.on(type, wrapper);
    return this;
};
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;编写一个函数将列表子元素顺序反转&quot;&gt;&lt;a href=&quot;#编写一个函数将列表子元素顺序反转&quot; class=&quot;headerlink&quot; title=&quot;编写一个函数将列表子元素顺序反转&quot;&gt;&lt;/a&gt;编写一个函数将列表子元素顺序反转&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul id=&amp;quot;target&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;1&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;2&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;3&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;4&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var target = document.getElementById(&amp;apos;target&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var frag = document.createDocumentFragment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = target.children.length - 1; i &amp;amp;gt;= 0; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frag.appendChild(target.children[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target.appendChild(frag);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;以下函数的作用是-空白区域应该填写什么&quot;&gt;&lt;a href=&quot;#以下函数的作用是-空白区域应该填写什么&quot; class=&quot;headerlink&quot; title=&quot;以下函数的作用是?空白区域应该填写什么&quot;&gt;&lt;/a&gt;以下函数的作用是?空白区域应该填写什么&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function (window) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    function fn(str) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.str = str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fn.prototype.format = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var arg = __1__;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return this.str.replace(__2__, function (a, b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return arg[b] || &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.fn = fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(window);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// use&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var t = new fn(&amp;apos;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;&amp;#123;0&amp;#125;&amp;quot;&amp;gt;&amp;#123;1&amp;#125;&amp;lt;/a&amp;gt;&amp;lt;span&amp;gt;&amp;#123;2&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(t.format(&amp;apos;http://www.alibaba.com&amp;apos;, &amp;apos;Alibaba&amp;apos;, &amp;apos;Welcome&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;define部分定义一个简单的模板类，使用{}作为转义标记，中间的数字表示替换目标，format实参用来替换模板内标记&lt;br&gt;横线处填：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Array.prototype.slice.call(arguments, 0)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/\{\s*(\d+)\s*\}/g&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;编写一个函数实现form的序列化-即将一个表单中的键值序列化为可提交的字符串&quot;&gt;&lt;a href=&quot;#编写一个函数实现form的序列化-即将一个表单中的键值序列化为可提交的字符串&quot; class=&quot;headerlink&quot; title=&quot;编写一个函数实现form的序列化(即将一个表单中的键值序列化为可提交的字符串)&quot;&gt;&lt;/a&gt;编写一个函数实现form的序列化(即将一个表单中的键值序列化为可提交的字符串)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;form id=&amp;quot;target&amp;quot;&amp;gt;
    &amp;lt;select name=&amp;quot;age&amp;quot;&amp;gt;
        &amp;lt;option value=&amp;quot;aaa&amp;quot;&amp;gt;aaa&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;bbb&amp;quot; selected&amp;gt;bbb&amp;lt;/option&amp;gt;
    &amp;lt;/select&amp;gt;
    &amp;lt;select name=&amp;quot;friends&amp;quot; multiple&amp;gt;
        &amp;lt;option value=&amp;quot;qiu&amp;quot; selected&amp;gt;qiu&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;de&amp;quot;&amp;gt;de&amp;lt;/option&amp;gt;
        &amp;lt;option value=&amp;quot;qing&amp;quot; selected&amp;gt;qing&amp;lt;/option&amp;gt;
    &amp;lt;/select&amp;gt;
    &amp;lt;input name=&amp;quot;name&amp;quot; value=&amp;quot;qiudeqing&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;password&amp;quot; value=&amp;quot;11111&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;salery&amp;quot; value=&amp;quot;3333&amp;quot;&amp;gt;
    &amp;lt;textarea name=&amp;quot;description&amp;quot;&amp;gt;description&amp;lt;/textarea&amp;gt;
    &amp;lt;input type=&amp;quot;checkbox&amp;quot; name=&amp;quot;hobby&amp;quot; checked value=&amp;quot;football&amp;quot;&amp;gt;Football
    &amp;lt;input type=&amp;quot;checkbox&amp;quot; name=&amp;quot;hobby&amp;quot; value=&amp;quot;basketball&amp;quot;&amp;gt;Basketball
    &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;sex&amp;quot; checked value=&amp;quot;Female&amp;quot;&amp;gt;Female
    &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;sex&amp;quot; value=&amp;quot;Male&amp;quot;&amp;gt;Male
&amp;lt;/form&amp;gt;


&amp;lt;script&amp;gt;

/**
 * 将一个表单元素序列化为可提交的字符串
 *
 * @param {FormElement} form 需要序列化的表单元素
 * @return {string} 表单序列化后的字符串
 */
function serializeForm(form) {
  if (!form || form.nodeName.toUpperCase() !== &amp;apos;FORM&amp;apos;) {
    return;
  }

  var result = [];

  var i, len;
  var field, fieldName, fieldType;

  for (i = 0, len = form.length; i &amp;lt; len; ++i) {
    field = form.elements[i];
    fieldName = field.name;
    fieldType = field.type;

    if (field.disabled || !fieldName) {
      continue;
    } // enf if

    switch (fieldType) {
      case &amp;apos;text&amp;apos;:
      case &amp;apos;password&amp;apos;:
      case &amp;apos;hidden&amp;apos;:
      case &amp;apos;textarea&amp;apos;:
        result.push(encodeURIComponent(fieldName) + &amp;apos;=&amp;apos; +
            encodeURIComponent(field.value));
        break;

      case &amp;apos;radio&amp;apos;:
      case &amp;apos;checkbox&amp;apos;:
        if (field.checked) {
          result.push(encodeURIComponent(fieldName) + &amp;apos;=&amp;apos; +
            encodeURIComponent(field.value));
        }
        break;

      case &amp;apos;select-one&amp;apos;:
      case &amp;apos;select-multiple&amp;apos;:
        for (var j = 0, jLen = field.options.length; j &amp;lt; jLen; ++j) {
          if (field.options[j].selected) {
            result.push(encodeURIComponent(fieldName) + &amp;apos;=&amp;apos; +
              encodeURIComponent(field.options[j].value || field.options[j].text));
          }
        } // end for
        break;

      case &amp;apos;file&amp;apos;:
      case &amp;apos;submit&amp;apos;:
        break; // 是否处理？

      default:
        break;
    } // end switch
  } // end for

    return result.join(&amp;apos;&amp;amp;&amp;apos;);
}

var form = document.getElementById(&amp;apos;target&amp;apos;);
console.log(serializeForm(form));
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;使用原生javascript给下面列表中的li节点绑定点击事件-点击时创建一个Object对象-兼容IE和标准浏览器&quot;&gt;&lt;a href=&quot;#使用原生javascript给下面列表中的li节点绑定点击事件-点击时创建一个Object对象-兼容IE和标准浏览器&quot; class=&quot;headerlink&quot; title=&quot;使用原生javascript给下面列表中的li节点绑定点击事件,点击时创建一个Object对象,兼容IE和标准浏览器&quot;&gt;&lt;/a&gt;使用原生javascript给下面列表中的li节点绑定点击事件,点击时创建一个Object对象,兼容IE和标准浏览器&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul id=&amp;quot;nav&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://11111&amp;quot;&amp;gt;111&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://2222&amp;quot;&amp;gt;222&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://333&amp;quot;&amp;gt;333&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://444&amp;quot;&amp;gt;444&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;index&amp;quot;: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;name&amp;quot;: &amp;quot;111&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;link&amp;quot;: &amp;quot;http://1111&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;script:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var EventUtil = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getEvent: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return event || window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getTarget: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return event.target || event.srcElement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 返回注册成功的监听器，IE中需要使用返回值来移除监听器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    on: function (elem, type, handler) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (elem.addEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.addEventListener(type, handler, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (elem.attachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            function wrapper(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return handler.call(elem, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.attachEvent(&amp;apos;on&amp;apos; + type, wrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return wrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    off: function (elem, type, handler) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (elem.removeEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.removeEventListener(type, handler, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (elem.detachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elem.detachEvent(&amp;apos;on&amp;apos; + type, handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    preventDefault: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (event.preventDefault) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (&amp;apos;returnValue&amp;apos; in event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.returnValue = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stopPropagation: function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (event.stopPropagation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.stopPropagation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (&amp;apos;cancelBubble&amp;apos; in event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.cancelBubble = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var DOMUtil = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text: function (elem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (&amp;apos;textContent&amp;apos; in elem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return elem.textContent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (&amp;apos;innerText&amp;apos; in elem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return elem.innerText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prop: function (elem, propName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return elem.getAttribute(propName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var nav = document.getElementById(&amp;apos;nav&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EventUtil.on(nav, &amp;apos;click&amp;apos;, function (event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var event = EventUtil.getEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var target = EventUtil.getTarget(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var children = this.children;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i, len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var anchor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = 0, len = children.length; i &amp;lt; len; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (children[i] === target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.index = i + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            anchor = target.getElementsByTagName(&amp;apos;a&amp;apos;)[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.name = DOMUtil.text(anchor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.link = DOMUtil.prop(anchor, &amp;apos;href&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&amp;apos;index: &amp;apos; + obj.index + &amp;apos; name: &amp;apos; + obj.name +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos; link: &amp;apos; + obj.link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;有一个大数组-var-a-‘1’-‘2’-‘3’-…-a的长度是100-内容填充随机整数的字符串-请先构造此数组a-然后设计一个算法将其内容去重&quot;&gt;&lt;a href=&quot;#有一个大数组-var-a-‘1’-‘2’-‘3’-…-a的长度是100-内容填充随机整数的字符串-请先构造此数组a-然后设计一个算法将其内容去重&quot; class=&quot;headerlink&quot; title=&quot;有一个大数组,var a = [‘1’, ‘2’, ‘3’, …];a的长度是100,内容填充随机整数的字符串.请先构造此数组a,然后设计一个算法将其内容去重&quot;&gt;&lt;/a&gt;有一个大数组,var a = [‘1’, ‘2’, ‘3’, …];a的长度是100,内容填充随机整数的字符串.请先构造此数组a,然后设计一个算法将其内容去重&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 数组去重&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function normalize(arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (arr &amp;amp;&amp;amp; Array.isArray(arr)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var i, len, map = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (i = arr.length; i &amp;gt;= 0; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (arr[i] in map) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                arr.splice(i, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                map[arr[i]] = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return arr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 用100个随机整数对应的字符串填充数组。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function fillArray(arr, start, end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = start == undefined ? 1 : start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end = end == undefined ?  100 : end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (end &amp;lt;= start) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end = start + 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var width = end - start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = 100; i &amp;gt;= 1; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        arr.push(&amp;apos;&amp;apos; + (Math.floor(Math.random() * width) + start));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return arr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var input = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fillArray(input, 1, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input.sort(function (a, b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a - b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;normalize(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(input);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;转载自: &lt;a href=&quot;https://github.com/qiu-deqing/FE-interview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/qiu-deqing/FE-interview&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href=&quot;http://doctoc.herokuapp.com/&quot;&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;前端面试基础题&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python爬虫学习之二</title>
    <link href="http://imuyi.github.io/2016/04/09/Python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/"/>
    <id>http://imuyi.github.io/2016/04/09/Python爬虫学习之二/</id>
    <published>2016-04-09T14:27:19.000Z</published>
    <updated>2016-04-09T14:32:35.416Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Scrapy学习&quot;&gt;&lt;a href=&quot;#Scrapy学习&quot; class=&quot;headerlink&quot; title=&quot;Scrapy学习&quot;&gt;&lt;/a&gt;Scrapy学习&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;An open source and collaborative framework for extracting the data you need from websites. In a fast, simple, yet extensible way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Scrapy是一个开源的、能够快速、简单获取你所需网页数据的的框架，并且它具有良好的可扩展性。&lt;/p&gt;
&lt;p&gt;首先，它是一个框架，大部分时候是作为爬虫架构来使用。它与BeautifulSoup，request不同，严格意义上来说后两者是一个用来解析HTML\XML的Python库，爬取工作仍然需要urllib或者其他的库来配合完成；而Scrapy提供了一整套网页爬取的架构，包括：爬取、下载，储存等功能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;下图很形象的说明了Scrapy的工作原理：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1858466-e15a81faf81eb7f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Scrapy&quot;&gt;&lt;br&gt;&lt;strong&gt;ScrapyEngine&lt;/strong&gt;：位于&lt;code&gt;Scrapy/core/engine&lt;/code&gt;，作为整个框架的引擎，驱动Scheduler，Donwload，Spiders。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ExecutionEngine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, request, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something related to scheduler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, request, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something related to downloader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;spider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, request, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something related to schedule&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    other function&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;：从&lt;code&gt;start_urls&lt;/code&gt;依此获取url，交给Downloader下载，并且从Spiders中过去新的url&lt;del&gt;(如果有的话)&lt;/del&gt;。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;          class Scheduler(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              def open(self, spider)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   open spider&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              def enqueue_request(self,request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   do something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              def next_request(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   get next_request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              other function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**Downloader**：获取Scheduler里的url，从网络中获取url的内容，并将获取内容交给Spiders。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` python       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class Downloader(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            def fetch(self, request, spider):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fetching&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            def download(self, slot, request, spider):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                download&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spiders&lt;/strong&gt;：解析获取页面的内容，通过XPath，获得需要的内容，将这些内容存放到Item定义的Field中&lt;del&gt;并交给Pipeline进一步处理&lt;/del&gt;。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;yourSpider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&quot;your spider name, unique&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    domain = &lt;span class=&quot;string&quot;&gt;&quot;allowed domain&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start_urls = [&lt;span class=&quot;string&quot;&gt;&quot;https://www.target.com/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   other urls,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rules = [Rule(your rules)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, response)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Item&lt;/strong&gt;：Scrapy自定义的字典，规定你需要从网页中获取的内容。例如，你想要获得豆瓣排名前二十名的电影的名字、导演、评分，那么可以在Item中定义：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; scrapy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Item, Field&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoubanItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Item)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     title = Field()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     movieInfo = Field()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     star = Field()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     quote = Field()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pipeline&lt;/strong&gt;：对Item中的数据做进一步处理，存入数据库or丢弃掉。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoubanPipeline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process_item&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, item, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do something&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上是一个完整的Scrapy爬虫框架，Scrapy已经为我们写好了前三部分(Engine，Scheduler，Downloader)，我们只需要自己写出Spiders，Item，Pipeline就好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里是scrapy的&lt;a href=&quot;http://scrapy-chs.readthedocs.org/zh_CN/latest/intro/tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文文档&lt;/a&gt;，如果我说的不清楚，大家可以去看官方文档。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Scrapy学习&quot;&gt;&lt;a href=&quot;#Scrapy学习&quot; class=&quot;headerlink&quot; title=&quot;Scrapy学习&quot;&gt;&lt;/a&gt;Scrapy学习&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;An open source and collaborative framework for extracting the data you need from websites. In a fast, simple, yet extensible way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Scrapy是一个开源的、能够快速、简单获取你所需网页数据的的框架，并且它具有良好的可扩展性。&lt;/p&gt;
&lt;p&gt;首先，它是一个框架，大部分时候是作为爬虫架构来使用。它与BeautifulSoup，request不同，严格意义上来说后两者是一个用来解析HTML\XML的Python库，爬取工作仍然需要urllib或者其他的库来配合完成；而Scrapy提供了一整套网页爬取的架构，包括：爬取、下载，储存等功能。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://imuyi.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://imuyi.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫学习之一</title>
    <link href="http://imuyi.github.io/2016/04/06/Python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80/"/>
    <id>http://imuyi.github.io/2016/04/06/Python爬虫学习之一/</id>
    <published>2016-04-06T14:49:45.000Z</published>
    <updated>2016-04-09T14:47:08.232Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这几天发现一个比较适合Python爬虫初学者的网站，我是跟着里边的kingname老师学习，这就当作是一个学习笔记里，有人想去听老师讲课，可以点&lt;a href=&quot;http://my.jikexueyuan.com/6128566806/record/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;单线程爬虫&quot;&gt;&lt;a href=&quot;#单线程爬虫&quot; class=&quot;headerlink&quot; title=&quot;单线程爬虫&quot;&gt;&lt;/a&gt;单线程爬虫&lt;/h2&gt;&lt;p&gt;如何伪装成浏览器呢？&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; reques&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html = request.get(url, header = header)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html.encoding = &lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在get或者post的时候加入&lt;strong&gt;User-Agent&lt;/strong&gt;可以伪装成浏览器。至于怎么获得&lt;strong&gt;User-Agent&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;&lt;font face=&quot;Aril&quot; color=&quot;blue&quot;&gt;chrome-&amp;gt;F12-&amp;gt;Network-&amp;gt;随便点一个接收的信息-&amp;gt;Headers-&amp;gt;Request Headers&lt;/font&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;解析HTML，获取有用信息&quot;&gt;&lt;a href=&quot;#解析HTML，获取有用信息&quot; class=&quot;headerlink&quot; title=&quot;解析HTML，获取有用信息&quot;&gt;&lt;/a&gt;解析HTML，获取有用信息&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;正则表达式&lt;br&gt;比较笨的办法。适用于网页简单，正则特别好写的情况，不用安装别的库了。&lt;/li&gt;
&lt;li&gt;利用DOM解析HTML&lt;br&gt;BeautifulSoup，request啊什么的都提供了一些功能强大的DOM解析方法，便于使用。&lt;/li&gt;
&lt;li&gt;利用XPath解析HTML&lt;br&gt;这其实也是DOM解析的一种吧？但是在爬一些比较复杂的网页时候，特别好用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;XPATH&quot;&gt;&lt;a href=&quot;#XPATH&quot; class=&quot;headerlink&quot; title=&quot;XPATH&quot;&gt;&lt;/a&gt;XPATH&lt;/h4&gt;&lt;p&gt;怎么使用XPath？&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; lxml &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; etree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;selector = etree.HTML(html)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;selector.xpath(&lt;span class=&quot;string&quot;&gt;&#39;XPATH&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;XPath怎么写？&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//     ：根节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/      ：往下层寻找&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/text()：提取文本内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/@attr ：提取属性内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#提取div的id为first_div的文字内容  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;selector.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//div[@id=&quot;first_div&quot;]/text()&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#提取a标签的href属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;selector.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//a/@href&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;多线程爬虫&quot;&gt;&lt;a href=&quot;#多线程爬虫&quot; class=&quot;headerlink&quot; title=&quot;多线程爬虫&quot;&gt;&lt;/a&gt;多线程爬虫&lt;/h2&gt;&lt;p&gt;虽然Python有&lt;a href=&quot;https://zh.wikipedia.org/wiki/GIL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GIL&lt;/a&gt;，但是多线程还是可以在一定程度上提升爬取的速度。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing.dummy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ThreadPool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pools = ThreadPool(__max_core_num__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = pools.map(Spider_function, target_urls)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pools.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pools.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;map(func, seq)&lt;/strong&gt;函数是Python内置函数，用来接收seq内元素依此执行func后返回的值。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这几天发现一个比较适合Python爬虫初学者的网站，我是跟着里边的kingname老师学习，这就当作是一个学习笔记里，有人想去听老师讲课，可以点&lt;a href=&quot;http://my.jikexueyuan.com/6128566806/record/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://imuyi.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://imuyi.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>将Django搭建在Apache上</title>
    <link href="http://imuyi.github.io/2016/04/06/%E5%B0%86Django%E6%90%AD%E5%BB%BA%E5%9C%A8Apache%E4%B8%8A/"/>
    <id>http://imuyi.github.io/2016/04/06/将Django搭建在Apache上/</id>
    <published>2016-04-06T02:47:57.000Z</published>
    <updated>2016-04-06T15:04:03.525Z</updated>
    
    <content type="html">&lt;p&gt;前段时间，由于实验室项目的需要，要搭建一个web服务器，可怜我只会写python，所以就去研究了一下Django。学习Django是一个愉快的过程，本来就该如此嘛，Python提倡INTERESTING TO CODE，所以很快，我就完成了Django的本地部署，然而在把Django搭到服务器上的是，却是让我捣鼓了一个星期，真真是把我坑苦了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-我的环境&quot;&gt;&lt;a href=&quot;#1-我的环境&quot; class=&quot;headerlink&quot; title=&quot;1.我的环境&quot;&gt;&lt;/a&gt;1.我的环境&lt;/h3&gt;&lt;p&gt;在把Django搭建到Apache上时候，首先你需要明确你使用的&lt;strong&gt;Django&lt;/strong&gt;和&lt;strong&gt;Apache&lt;/strong&gt;的版本，嗯，还有&lt;strong&gt;Python&lt;/strong&gt;的版本（&lt;font color=&quot;gray&quot;&gt;这很重要&lt;/font&gt;）！&lt;/p&gt;
&lt;p&gt;很多人依照网上的教程，BALABALA的输入&lt;code&gt;pip install Django&lt;/code&gt;、&lt;code&gt;sudo apt-get install Apache2&lt;/code&gt;，改了Apache配置文件，调了Django的setting，最后弄完了发现一直不成功，对着&lt;strong&gt;命令&lt;/strong&gt;和&lt;strong&gt;配置文件&lt;/strong&gt;看了半天也没发现有什么错误，怎么就一直不行呢？&lt;strong&gt;很可能你一开始就错了呀！&lt;/strong&gt;人家是&lt;strong&gt;Python2&lt;/strong&gt;，你的是&lt;strong&gt;Python3&lt;/strong&gt;；人家的是&lt;strong&gt;Apache2.2&lt;/strong&gt;，你的是&lt;strong&gt;Apache2.4&lt;/strong&gt;。底子都不一样，搭起来能用才怪，所以第一步，一定要清楚自己的环境，具体的说就是你使用的版本号！&lt;/p&gt;
&lt;p&gt;如果你是看我的文章，从头开始安装的话，那么我建议你使用&lt;code&gt;pip install Django==1.x&lt;/code&gt;来代替&lt;code&gt;pip install Django&lt;/code&gt;，甚至在你安装pip的时候，我都建议你明确的指明是用python2或者python3来安装（现在大多数的云服务器都包含Py2和Py3两个版本）。&lt;/p&gt;
&lt;p&gt;接下来，我告诉你我搭建的环境，我的配置都是在此环境基础上配置的，如果其他环境，我了解我也会提一句。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Ubuntu 14.04&lt;/li&gt;
&lt;li&gt;Apache: Apache2.4&lt;br&gt; &lt;code&gt;sudo apt-get install apache2  #安装Apache&lt;/code&gt;&lt;br&gt; &lt;code&gt;apachectl -v  #检查Apache版本，ubunt 14.04没经过其他设置，默认应该是Apache2.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Python: Python2 &lt;/li&gt;
&lt;li&gt;Django: Django1.8&lt;br&gt;&lt;code&gt;pip install Django==1.8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-建立Python与Apache的链接&quot;&gt;&lt;a href=&quot;#2-建立Python与Apache的链接&quot; class=&quot;headerlink&quot; title=&quot;2.建立Python与Apache的链接&quot;&gt;&lt;/a&gt;2.建立Python与Apache的链接&lt;/h3&gt;&lt;p&gt;简单的来说就是&lt;strong&gt;Apache&lt;/strong&gt;如何识别你的&lt;strong&gt;Django&lt;/strong&gt;代码。无论如何，你的&lt;strong&gt;Django&lt;/strong&gt;都是用Python写的，所以不恰当的说法就是给你的&lt;strong&gt;Apache&lt;/strong&gt;安装&lt;strong&gt;Python&lt;/strong&gt;解释器。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libapache2-mod-wsgi      &lt;span class=&quot;comment&quot;&gt;#Python2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libapache2-mod-wsgi-py3  &lt;span class=&quot;comment&quot;&gt;#Python3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一条是对于&lt;strong&gt;Python2&lt;/strong&gt;用户的，第二条是对于&lt;strong&gt;Python3&lt;/strong&gt;用户的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你是&lt;strong&gt;Python2&lt;/strong&gt;用户又恰巧不小心输入了第二条命令，那么不要怕，再输入第一条命令就好啦，同样的&lt;strong&gt;Python3&lt;/strong&gt;也可以通过再输入第二条命令来重置&lt;strong&gt;Apache&lt;/strong&gt;的&lt;strong&gt;Python&lt;/strong&gt;解释器（这种说法不一定对，但是我相信你懂我意思！）！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3-为Django安家，让Apache找到它&quot;&gt;&lt;a href=&quot;#3-为Django安家，让Apache找到它&quot; class=&quot;headerlink&quot; title=&quot;3.为Django安家，让Apache找到它&quot;&gt;&lt;/a&gt;3.为Django安家，让Apache找到它&lt;/h3&gt;&lt;p&gt;大致可以分为四步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将Django工程放在&lt;code&gt;/var/www/&lt;/code&gt;下；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo vi /etc/apache2/sites-available/yoursite.conf&lt;/code&gt; 修改配置文件；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo a2ensite yoursite.conf&lt;/code&gt; 配置文件生效；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo service apache2 restart&lt;/code&gt; 重启Apache。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt;默认的网站目录是&lt;code&gt;/var/www/&lt;/code&gt;。通常来说，如果你只是自己搭着玩玩也没有必要更改这个目录，直接就将你的&lt;strong&gt;Django工程文件夹&lt;/strong&gt;放在这就行了。&lt;/p&gt;
&lt;p&gt;如果你想要放在别处的话，可以通过修改&lt;code&gt;/etc/apache2/apache2.conf&lt;/code&gt;中的&lt;code&gt;&amp;lt;Directory /var/www&amp;gt;&lt;/code&gt;，将其改为&lt;code&gt;&amp;lt;Directory /where/you/want&amp;gt;&lt;/code&gt;，不过配套的你需要修改其权限。具体的修改方法&lt;a href=&quot;http://www.ziqiangxuetang.com/django/django-deploy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以上只是完成了&lt;strong&gt;为Django安家&lt;/strong&gt;这一步，但是我们还需要让&lt;strong&gt;Apache找到Django&lt;/strong&gt;（方便查水表）。&lt;/p&gt;
&lt;p&gt;新建一个网站配置文件：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vi /etc/apache2/sites-available/yoursite.conf。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里边包含了你所有的网站配置信息，包括Apache如何查找静态文件(&lt;code&gt;js/css/images&lt;/code&gt;)，网站上传的文件存在哪里，最重要的，包含了&lt;strong&gt;Apache&lt;/strong&gt;识别&lt;strong&gt;Django&lt;/strong&gt;的&lt;strong&gt;wsgi&lt;/strong&gt;文件。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&amp;lt;VirtualHost *:80&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ServerName www.yourdomain.com &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#ServerAlias otherdomain.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#ServerAdmin youremail@gmail.com &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 存放用户上传图片等文件的位置，注意去掉#号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Alias /media/ /var/www/ProjectName/media/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 静态文件(js/css/images)的存放位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Alias /static/ /var/www/ProjectName/static/                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 允许通过网络获取static的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /var/www/ProjectName/static/&amp;gt;                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all granted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 最重要的！通过wsgi.py让Apache识别这是一个Django工程，别漏掉前边的 /&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WSGIScriptAlias / /var/www/ProjectName/ProjectName/wsgi.py     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# wsgi.py文件的父级目录，第一个ProjectName为Django工程目录，第二个ProjectName为Django自建的与工程同名的目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /var/www/ProjectName/ProjectName/&amp;gt;                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Files wsgi.py&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all granted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Files&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过修改上面的文件，你就可以让&lt;strong&gt;Apache&lt;/strong&gt;找到你的&lt;strong&gt;Django&lt;/strong&gt;工程，上边可以修改的内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;80：修改80为其他数字，可以更改你的端口号，国内的电信貌似把80端口给封了（如果你的域名没有备案的话）。&lt;strong&gt;注意，还要修改&lt;code&gt;/etc/apache2/port.conf&lt;/code&gt;文件中的&lt;code&gt;Listen port&lt;/code&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;ServerName：后边改成你自己的域名，如果没有的话就用IP代替。&lt;strong&gt;注意，如果改成了域名，还需要修改Django工程下的&lt;code&gt;seeting.py&lt;/code&gt;文件，将其&lt;code&gt;ALLOWED_HOSTS=[]&lt;/code&gt;改为&lt;code&gt;ALLOWED_HOSTS=[&amp;#39;www.yourdomain.com&amp;#39;]&lt;/code&gt;，多个域名可以通过逗号隔开&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;ServerAlias：你的其他域名或IP。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后要让这个配置文件生效，你需要运行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo a2ensite yoursite.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有时候，你可能需要让它失效（因为你将yoursite.conf改名为其他名字？），可以运行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo a2dissite yoursite.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;做完以上步骤，Apache会提醒你要执行&lt;code&gt;sudo service apache2 relaod&lt;/code&gt;，这条命令主要是你手动&lt;strong&gt;命令Apache根据你刚才配置的yoursite.conf去寻找Django工程&lt;/strong&gt;，当然我一般都是&lt;strong&gt;restart&lt;/strong&gt;，如果你的&lt;strong&gt;Apache&lt;/strong&gt;不为其他的网站提供服务，那么你也&lt;strong&gt;restart&lt;/strong&gt;吧，因为&lt;strong&gt;重启大法好&lt;/strong&gt;！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每次你修改&lt;strong&gt;Django&lt;/strong&gt;工程文件之后，都要&lt;strong&gt;restart&lt;/strong&gt;一下，它才会生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-修改Django的wsgi-py文件&quot;&gt;&lt;a href=&quot;#4-修改Django的wsgi-py文件&quot; class=&quot;headerlink&quot; title=&quot;4.修改Django的wsgi.py文件&quot;&gt;&lt;/a&gt;4.修改Django的wsgi.py文件&lt;/h3&gt;&lt;p&gt;修改上面说的&lt;code&gt;/var/www/ProjectName/ProjectName/wsgi.py&lt;/code&gt;为如下格式&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; os.path &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; join,dirname,abspath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PROJECT_DIR = dirname(dirname(abspath(__file__)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.path.insert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,PROJECT_DIR)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.environ.setdefault(&lt;span class=&quot;string&quot;&gt;&quot;DJANGO_SETTINGS_MODULE&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;examsys.settings&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.core.wsgi &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; get_wsgi_application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application = get_wsgi_application()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个配置文件的作用也是让&lt;strong&gt;Apache&lt;/strong&gt;找到&lt;strong&gt;Djanog&lt;/strong&gt;，毕竟不能一厢情愿吗，&lt;strong&gt;Apache&lt;/strong&gt;同意和&lt;strong&gt;Django&lt;/strong&gt;“交往”了，但是万一人家&lt;strong&gt;Django&lt;/strong&gt;不乐意呢？&lt;br&gt;最后，还记得我说的嘛？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每次你修改&lt;strong&gt;Django&lt;/strong&gt;工程文件之后，都要&lt;strong&gt;restart&lt;/strong&gt;一下，它才会生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5-调试错误&quot;&gt;&lt;a href=&quot;#5-调试错误&quot; class=&quot;headerlink&quot; title=&quot;5.调试错误&quot;&gt;&lt;/a&gt;5.调试错误&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果你的网站没有加载静态文件(&lt;code&gt;js/css/images&lt;/code&gt;)，请检查你的静态文件是不是在&lt;code&gt;ProjectName/static&lt;/code&gt;下，而不是在&lt;code&gt;ProjectName/AppName/static&lt;/code&gt;下（改这里边的文件是不用重启&lt;strong&gt;Apache&lt;/strong&gt;的）。&lt;/li&gt;
&lt;li&gt;不知道啥问题，就是不管用，请查看&lt;strong&gt;Apache&lt;/strong&gt;的错误文档。&lt;br&gt;&lt;code&gt;cat /var/log/apache2/error.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No module named xxxx&lt;/strong&gt;。首先检查一下你所依赖的库是否安装全了，没有的话就&lt;code&gt;pip install&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No module named django或者其他含django的错误&lt;/strong&gt;。这说明你的环境搭错了。往上翻error.log，找到AH00489开头的错误，看看你到底用的是什么环境。一般都是你第二步&lt;strong&gt;Apache&lt;/strong&gt;的&lt;strong&gt;Python&lt;/strong&gt;解释器安装错误。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上皆参考涂伟忠老师的&lt;a href=&quot;http://www.ziqiangxuetang.com/django/django-deploy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自强学堂&lt;/a&gt;，我自己搭建Django+Apache2时的心得，如果还不明白，可以去&lt;a href=&quot;http://www.ziqiangxuetang.com/django/django-deploy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自强学堂&lt;/a&gt;看看。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间，由于实验室项目的需要，要搭建一个web服务器，可怜我只会写python，所以就去研究了一下Django。学习Django是一个愉快的过程，本来就该如此嘛，Python提倡INTERESTING TO CODE，所以很快，我就完成了Django的本地部署，然而在把Django搭到服务器上的是，却是让我捣鼓了一个星期，真真是把我坑苦了。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="http://imuyi.github.io/categories/Django/"/>
    
    
      <category term="Python,Django" scheme="http://imuyi.github.io/tags/Python-Django/"/>
    
  </entry>
  
  <entry>
    <title>新的征程</title>
    <link href="http://imuyi.github.io/2016/04/05/%E6%96%B0%E7%9A%84%E5%BE%81%E7%A8%8B/"/>
    <id>http://imuyi.github.io/2016/04/05/新的征程/</id>
    <published>2016-04-05T02:07:07.000Z</published>
    <updated>2016-04-06T15:05:32.133Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;既然选择了远方，便只顾风雨兼程。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;既然选择了远方，便只顾风雨兼程。&lt;/p&gt;
&lt;/blockquote&gt;

    
    </summary>
    
      <category term="essay" scheme="http://imuyi.github.io/categories/essay/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://imuyi.github.io/2016/04/04/hello-world/"/>
    <id>http://imuyi.github.io/2016/04/04/hello-world/</id>
    <published>2016-04-04T12:50:10.007Z</published>
    <updated>2016-04-04T12:50:10.007Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
